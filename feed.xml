<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ko"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://seulwithlove.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://seulwithlove.github.io/" rel="alternate" type="text/html" hreflang="ko"/><updated>2024-07-14T14:06:38+00:00</updated><id>https://seulwithlove.github.io/feed.xml</id><title type="html">Seul with Love</title><subtitle>A blog with Love </subtitle><entry><title type="html">30분 읽기 모임 기록 - 7월 2주</title><link href="https://seulwithlove.github.io/blog/2024/30mins-reading-240714/" rel="alternate" type="text/html" title="30분 읽기 모임 기록 - 7월 2주"/><published>2024-07-14T00:00:00+00:00</published><updated>2024-07-14T00:00:00+00:00</updated><id>https://seulwithlove.github.io/blog/2024/30mins-reading-240714</id><content type="html" xml:base="https://seulwithlove.github.io/blog/2024/30mins-reading-240714/"><![CDATA[<h1 id="책">책</h1> <p><a href="https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=177251765">일간 이슬아 수필집</a><br/> <a href="https://www.instagram.com/sullalee/">이슬아</a><br/> 헤엄</p> <h2 id="그의-문장과-나의-생각">그의 문장과 나의 생각</h2> <ul> <li><em><font color="#2DC26B">울을 보며 나는 아픈 사람의 다정이란 걸 배웠다. 허리 디스크가 있는 사람이 꼭 좋은 의자를 손님에게 내어주는 다정 같은 거. 아무리 즐거운 자리여도 피곤해 보이면 어서 집에 들여보내는 다정 같은 거. 누군가가 무리하기 전에 재빨리 알아차려주는 다정 같은 거. 남의 아픔을 내 아픔처럼 맞이하는 마음의 품을 울에게서 확인해왔다.</font></em> <ul> <li>아픔이 남기는 분명한 흔적이 있다. 그 흔적이 아름다운 사람도 있고 견디기 힘든 사람도 있다. 나의 아픔들은 어떤 흔적을 남기고 갔을까.</li> </ul> </li> <li><em><font color="#2DC26B"> 일본 여행에서는 두 권의 책을 읽었는데 그중 하나는 나쓰메 소세키의 &lt;산시로&gt;였다. &lt;산시로&gt;를 반까지 읽으며 이 소설이 느리게 흘러가는 소설임을, 주인공이 한 권에 걸쳐서 아주 조금 변하는 소설임을 알아챘다. 한 사람이 조금 변하기까지 이렇게나 많은 장면이 필요하다.</font></em> <ul> <li>작년과 비교해봤을때 나는 엄청 많이 변했다. 생각하는 방향은 더 구체적이고 긍정적으로 바뀌었고, 부족함을 빠르게 인정하고 욕심을 좀 내려놓게 되었다. 변화는 진행형이니까 앞으로도 더 많은 장면을 맞이하게 되겠지.</li> </ul> </li> <li><em><font color="#2DC26B">둘의 연애는 서로를 확장시키기도 하고 축소시키기도 하겠지만 어쨌든 서로가 아니면 안 되는 순간들이 무수해 보였다.</font></em> <ul> <li>무수한 우리의 순간을 소중히 하자!</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="diary"/><category term="reading"/><category term="books"/><summary type="html"><![CDATA[30분 동안 "일간 이슬아 수필집"을 읽고 남은 문장과 생각]]></summary></entry><entry><title type="html">30분 읽기 모임 기록 - 6월 4주</title><link href="https://seulwithlove.github.io/blog/2024/30mins-reading-240630/" rel="alternate" type="text/html" title="30분 읽기 모임 기록 - 6월 4주"/><published>2024-06-30T00:00:00+00:00</published><updated>2024-06-30T00:00:00+00:00</updated><id>https://seulwithlove.github.io/blog/2024/30mins-reading-240630</id><content type="html" xml:base="https://seulwithlove.github.io/blog/2024/30mins-reading-240630/"><![CDATA[<h1 id="책">책</h1> <p><a href="https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=177251765">일간 이슬아 수필집</a><br/> <a href="https://www.instagram.com/sullalee/">이슬아</a><br/> 헤엄</p> <h2 id="그의-문장과-나의-생각">그의 문장과 나의 생각</h2> <ul> <li><em><font color="#2DC26B">관심받으면 좋기 때문이다</font></em></li> <li><em><font color="#2DC26B">'신체의 외부화'</font></em>, <em><font color="#2DC26B">'페로몬의 디지털화'</font></em></li> <li><em><font color="#2DC26B">창피한데도 계속하게 하는 인스타그램의 활력이란 무엇인가. 누워있던 사람도 일어나게 만드는 그 활력. 어떤 좋아요는 하루를 해낼 용기를 준다. 어떤 댓글은 외우고 지침으로 삼을 만큼 따뜻하고 현명하다. 날 전시하고 싶은 허영과 동시에 매일 확인하고 싶은 남들의 계정 때문에 끊을 엄두가 나지 않는다. 좋아하는 남들의 자랑을 보면 즐겁기 때문이다.</font></em> <ul> <li>나도 외롭고 사랑받고 싶을때면 그동안 찍어두었던 사진들을 고르고 모아 예쁘게 정리해서 피드에 올리고 하트가 몇개가 쌓이나, 댓글이 달릴까 기다리곤했다.</li> <li>단 한 개의 하트였어도 그게 ‘아, 누군가 날 지켜봐주는 사람이 있구나.’하는 확인이 되어 그래 일단 살아보자 하고 다시 걸어갈 힘을 냈다.</li> <li>솔직하게 내가 좋아하는 것을 좋아한다는 건 내가 무엇을 좋아하는지에 대한 확신이 있어서가 아닐까?</li> </ul> </li> <li><em><font color="#2DC26B">하마가 말했다. / 그럼 이렇게 대답해. ...ㄴ픽션작가라고. / 뭐라고? / ...은픽션... / 그는 논픽션의 논을 대충 흐려서 발음하고 있었다. 거의 '응픽션'이라고 들렸다. 픽션이라는 건지 아니라는 건지 헷갈렸다. / 그 이후로 나도 최대한 얼버무리고 있다.</font></em> <ul> <li>나도 최대한 얼버무리며 ‘…ㄴ 하고 살고 있어요…‘라고 대답해야지</li> </ul> </li> <li><em><font color="#2DC26B">내가 뭘 잘하거나 못 하는지 힘주어 말하지 않고도, 탁월해지기 위한 조급함 없이 하루를 잘 마무리할 수 있게 될까?</font></em> <ul> <li>취업준비를 한다는건 나를 끊임없이 반짝이게 닦고 전시하는 행위를 하는 것 같다. 좋아하지도, 하고 싶지도 않은 작업을 해야하는데서 오는 스트레스가 정말 크다. 내가 이런 기술이 있는데 이런 일을 함께 해보면 좋을것 같아요! 하고서 돈을 받으며 일을 할수 있다면 좋겠다. 그 기술 실력이 매우 뛰어나다면 그럴수 있을까? 해야할 것들이 산처럼 쌓여 매 순간 눈을 들면 내 앞에 웅장하게 서서 날 내려다 본다. 기분이 좋을때나 에너지가 있을땐 바로 못본척 내 갈길 가버리는데, 작고 유약한 상태가 되면 짓눌려서 죽어가는 기분이 든다.</li> </ul> </li> <li><em><font color="#2DC26B">[4월호 연재를 마치며]</font></em> <ul> <li>작가에게서 이런 편지를 받는데 어떻게 다음 구독을 안할수 있을까? 역시 이슬아는 따뜻하고 강하고 멋진 사람이다. 롤모델로 삼아야지.</li> <li>나도 사회 문제를 바꾸기 위한 체력을 쌓기 위해 매일 아침 달리기를 시작해야할까. 내 무릎은 어떻게 하지… 몇시에 일어나야하지…</li> </ul> </li> <li><em><font color="#2DC26B">아주 무능해지는 느낌이었는데 그게 무척 좋았다</font></em> <ul> <li>무능해도 되는, 무능해도 아무렇지 않는 순간이 그립다.</li> </ul> </li> <li><em><font color="#2DC26B">아플 때 남에게 얼마나 폐를 끼치는지 알아서 두렵기 때문에 스스로의 컨디션을 늘 살폈다.</font></em> <ul> <li>늘 나의 컨디션을 살피자.</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="diary"/><category term="reading"/><category term="books"/><summary type="html"><![CDATA[30분 동안 "일간 이슬아 수필집"을 읽고 남은 문장과 생각]]></summary></entry><entry><title type="html">30분 읽기 모임 기록 - 6월 3주</title><link href="https://seulwithlove.github.io/blog/2024/30mins-reading-240623/" rel="alternate" type="text/html" title="30분 읽기 모임 기록 - 6월 3주"/><published>2024-06-23T00:00:00+00:00</published><updated>2024-06-23T00:00:00+00:00</updated><id>https://seulwithlove.github.io/blog/2024/30mins-reading-240623</id><content type="html" xml:base="https://seulwithlove.github.io/blog/2024/30mins-reading-240623/"><![CDATA[<h1 id="책">책</h1> <p><a href="https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=177251765">일간 이슬아 수필집</a><br/> 이슬아<br/> 헤엄</p> <h2 id="문장들">문장들</h2> <ul> <li><em><font color="#2DC26B">그들 중 몇몇은 자신이 쓴 글을 낭독하다가 종종 울기도 했다. 우는 걸 보고 곧바로 안아주고 싶은 맘을 참고, 글을 마저 읽도록 기다려주는 것도 사랑임을 나는 배웠다.</font></em></li> <li><em><font color="#2DC26B">글을 쓰고 낭독해준 그들에게 매번 다르게 고유한 칭찬의 말을 건네는 게 내가 할 일이었다. 아주 유심히 들어야 했다. 준비된 말이 넉넉해야 했다. 평소에 부지런히 읽어놔야 했다.</font></em></li> <li><em><font color="#2DC26B">나는 울보니까 아마도 울 것이다. 울까 봐 걱정되는 게 아니라 내 눈물의 이유를 몰라줄까 봐 걱정이 된다. 슬퍼서가 아니고 고마워서 우는 건데.</font></em></li> <li><em><font color="#2DC26B">편지를 쓰는 동안 생각했다. 이건 주어가 '너'인 문장을 자주 쓰게 되는 장르라고. 영영 나로밖에 못 사는 나에게 편지 쓰기는 그래서 다행으로 느껴진다.</font></em></li> <li><em><font color="#2DC26B">네가 주어인 문장을 틀리지 않기 위해 나는 열심히 너를 기억한다. 내가 본 네 모습이 네 눈에도 미덥게 비치기를, 그걸 부디 나의 과장과 친절 혹은 다정으로 폄하하지 않기를, 나의 정확한 안목이라고 네가 믿을 수 있기를. / 너를 믿게 하려고 나는 열심히 고민하고 쓴다. '너는'으로 시작하는 편지를.</font></em></li> <li><em><font color="#2DC26B">무슨 소리가 그렇게 컸냐고 물으면 복희는 자연은 원래 시끄러운 법이라고 대답한다. 무성한 풀과 꽃과 나무에서 나는 소리, 개구리와 귀뚜라미와 새와 소가 우는 소리, 땅에서 나오는 열기의 소리, 일몰의 소리, 바람의 소리. 시각과 후각과 청각을 다 채우는 그 소리들. 자연 속에 혼자 누워있을 때 복희는 자아가 다 흩어지는 느낌이었다고 말했다. / 꼭 내가 없는 느낌이었어. 내가 없는데 아주 충만한 느낌이었어.</font></em></li> <li><em><font color="#2DC26B">수목금요일을 지나 토요일 저녁이 되자 좀 비장한 사람이 되었다.</font></em></li> </ul> <h2 id="생각들">생각들</h2> <ul> <li>이슬아는 정말 아름다운 사람이구나. 아름다운 생각을 하고 아름다운 단어를 말하고, 아름다운 마음을 가졌구나.</li> <li>한때 이슬아의 글이 부러워 질투하며 이런 글을 쓰지 못하는 나 자신이 너무 미워져 이슬아의 글을 읽지 못했다. 그때의 내가 참 부끄럽지만, 그런 나를 받아들이고 다시 이슬아의 글을 읽기로 했으니 그사이 나는 어떤 지점에서 아주 조금은 성장한걸지도 모르겠다.</li> </ul>]]></content><author><name></name></author><category term="diary"/><category term="reading"/><category term="books"/><summary type="html"><![CDATA[30분 동안 "일간 이슬아 수필집"을 읽고 남은 작가의 문장과 나의 생각]]></summary></entry><entry><title type="html">SQLD 자격증 합격 후기</title><link href="https://seulwithlove.github.io/blog/2024/get-sqld-done/" rel="alternate" type="text/html" title="SQLD 자격증 합격 후기"/><published>2024-06-22T00:00:00+00:00</published><updated>2024-06-22T00:00:00+00:00</updated><id>https://seulwithlove.github.io/blog/2024/get-sqld-done</id><content type="html" xml:base="https://seulwithlove.github.io/blog/2024/get-sqld-done/"><![CDATA[<h1 id="취업-준비-첫번째-자격증--sqld-">취업 준비 첫번째 자격증 : SQLD ✅</h1> <ul> <li>시험을 치르고 나서 바로 후기를 정리했다면 보다 생생했을텐데 아쉽지만 그래도 마무리를 하기 위해 공부/시험 후기와 앞으로의 계획을 남긴다. <ul> <li>역시 블로그는 부지런해야해…:)</li> </ul> </li> <li>퇴실하고 나오면서 ‘아… 다음 시험 접수일이 언제였지?’하고 탈락을 확신했는데 운좋게 턱걸이로 합격하니 좀 놀랍다.<br/> <img width="737" alt="Screenshot 2024-06-22 at 10 27 56 PM" src="https://github.com/seulwithlove/seulwithlove/assets/140625136/715a46d0-57b1-4473-b56e-fdedacd31af6"/></li> </ul> <h2 id="시험-후기">시험 후기</h2> <h3 id="난이도">난이도</h3> <ul> <li>난이도는 생각만큼 어려웠다. 퇴실 가능 시간이 되자 답안지를 제출하고 퇴실하는 사람이 하나, 둘 늘었는데 나는 아직 절반도 못푼 상황이었다…🥲 <ul> <li><code>이때 차분하게 문제에 집중하는게 중요해보임! 멘탈 관리!</code></li> </ul> </li> <li>SQL 활용 파트의 특히 윈도우 함수가 어려워서 ‘SQL 자격검정 실전문제(노랭이)’에서 오답노트를 좀더 열심히 했는데 윈도우 함수 문제의 비중은 크지 않았던걸로 기억한다. <ul> <li>서브쿼리 부분을 확실하게 익힌다면 합격하는데 큰 문제는 없지 않을까 싶다.</li> </ul> </li> <li>생각보다 노랭이 책에서 문제가 많이 출제되지 않았던것으로 기억한다. <ul> <li>조경기능사 필기는 정말로 문제은행식으로 문제가 출제되었는데 SQLD는 개정이후라 그런지 1-2문제를 제외하면 모두 새로운 문제였다.</li> </ul> </li> </ul> <h3 id="과목별">과목별</h3> <ul> <li>시험이 종료되고 불합격한다면 그 원인은 1과목에 있을것이라고 생각했는데 오히려 1과목에서 1문제만 틀리고, 2과목에서 굉장히 많이 틀렸다. <ul> <li>꽤 2과목 잘 풀었다고 생각했는데 전혀 아니었나보다.</li> <li>오답노트 너무나 하고 싶은데 확인할수가 없으니 정말 아쉽다.</li> </ul> </li> </ul> <h3 id="그외">그외</h3> <ul> <li>자격증 시험을 정말 오랜만에 치르는데 고사장이 중학교인데다 컴퓨터싸인펜으로 마킹을 하니 기분이 묘했다. 검정펜으로도 답안지를 작성할수 있어서 별도로 컴싸를 준비해가지 않았는데 친절한 감독관님이 컴퓨터싸인펜을 빌려주셨다. <ul> <li>감독관님이 따로 준비하신건지, 시험 주최측에서 제공하는건지 모르겠지만, 사실 난 시간이 촉박했기때문에 검정펜으로 번호를 하나하나 색칠해야했다면 마음이 더 급했을지도 모르겠다…</li> <li><code>1분 1초를 절약해줄 컴퓨터싸인펜 준비 추천!</code></li> </ul> </li> </ul> <h2 id="공부-후기">공부 후기</h2> <ul> <li><strong>4/27부터 5/24까지 4주간 대략 하루 2~4시간씩 공부</strong></li> <li>계획 : &lt;2023 유선배 SQL개발자(SQLD) 과외노트&gt;(일명 유선배 책)를 중심으로 단권화 &amp; <SQL 자격검정="" 실전문제="">(일명 노랭이 책) 1회독 + 오답노트</SQL></li> <li>실행 : <strong>유튜브 &lt;<a href="https://www.youtube.com/@hdatalab">홍쌤의 데이터랩</a>&gt; 강의자료(일명 홍쌤 강의자료)를 중심으로 단권화 &amp; &lt;SQL 자격검정 실전문제&gt;(일명 노랭이 책) 2회독 +오답노트</strong> <ul> <li>SQL 언어를 처음 공부하는거라 1과목은 홍쌤 강의자료보다는 유선배 책에서 도움을 받았다. <ul> <li>유선배 책으로 아주 기본적인 데이터베이스, SQL 관련한 감을 익히고 나니 홍쌤 강의자료로 단권화를 할때 도움이 되었다.</li> </ul> </li> <li>2과목부터는 홍쌤 강의자료를 중심으로 단권화를 했지만 문법 중심의 요약 자료다보니 조금 더 설명이 필요한 부분은 추가로 자료를 찾아서 공부했다. <ul> <li>반복해서 나오는 SQL 문법을 익히는데 예제를 중심으로 정리된 홍쌤 강의자료가 큰 도움이 되었다.</li> </ul> </li> </ul> </li> <li>공부 KPT <ul> <li>Keep <ul> <li>1과목 이론에서 힘을 쏟지 않고 이해가 되지않더라도 ‘아, 그렇구나’ 하고 넘어간 뒤에 일단 2과목까지 1회독을 마쳤다. 역시 어떤 공부/일이든 한 사이클을 돌아보는게 중요하다.</li> <li>직접 SQL문을 실행할수 있는 환경세팅을 하고, 쿼리문을 직접 실행해본게 큰 도움이 되었다. <ul> <li>RDBMS를 둘러싼 생태계(DB:Oracle, SQL Server, PostgreSQL, MySQL, Tool:DBeaver, Datagrip, PgAdmin…)를 알게 되었다.</li> <li>PostgreSQL 데이터베이스 설치, 주피터노트북의 매직 명령어 활용, Database 툴 DBeaver 설치, Oracle 데이터베이스 설치… 초반에 포스팅한 환경세팅 글에 담지 못한, 쿼리를 직접 실행해야한다는 생각 하나로 겪은 지난한 과정이 있는데 지나고 보니 정말 잘했다는 생각이 든다.</li> <li>이 과정을 거치면서 오히려 도커를 사용하는 법에 대해 아주 조금 익히게 되었다.</li> </ul> </li> </ul> </li> <li>Problem <ul> <li>DUAL table은 갑자기 어디에서 튀어나온건지 한참 헤맸다. 자격증 시험대비 공부가 아니라 SQL 언어에 대한 공부를 했더라면 조금 더 빨리 알게 되었을까?</li> <li>SQL 문법은 어떤 방식으로 사용하는지 익혔지만 실제 데이터를 RDBMS 시스템에 연결해서 어떻게 활용하는지는 아직 알지 못한다.</li> </ul> </li> <li>Try <ul> <li>다양한 쿼리문을 활용해 실전 SQL문법과 DB 활용법을 익혀본다.</li> </ul> </li> </ul> </li> </ul> <h2 id="앞으로의-계획">앞으로의 계획</h2> <ul> <li>SQL 언어를 사용하는 과정 전반이 흥미롭고 매력적으로 느껴졌다. 이제 시험용 공부는 끝났으니 본격 공부를 시작해보자. <ul> <li>운이 좋게도 마침 단기로 일하고 있는 곳에서 게임데이터를 활용한 SQL 강의를 수강할수 있는 기회가 생겨서 기초부터 심화과정까지 경험(?)해볼 예정!</li> </ul> </li> </ul> <ol> <li>SQL을 다시 천천히 짚어가며 공부를 할 책이나 온라인 강의를 정해서 1회독을 한다. <ul> <li>김민우님께서 <a href="https://brunch.co.kr/@minu-log/6">브런치</a> 글에서 추천하는 <a href="https://online.stanford.edu/courses/soe-ydatabases0005-databases-relational-databases-and-sql">Stanford의 Databases 강의</a>도 있고, 유튜브도 한번 찾아봐야겠다.</li> </ul> </li> <li>꾸준히 <a href="https://school.programmers.co.kr/learn/challenges?tab=sql_practice_kit">프로그래머스</a>에서 제공하는 SQL 퀴즈를 푼다.</li> <li>실전에서는 어떻게 SQL 쿼리문을 작성하고 DB를 활용하는지 경험할수 있는 기회를 노린다.</li> </ol> <h3 id="데이터분석가를-향해-한걸음-더-나아가보자"><code>데이터분석가를 향해 한걸음 더 나아가보자!</code></h3>]]></content><author><name></name></author><category term="study"/><category term="자격증"/><category term="sqld"/><category term="skill-stacking"/><summary type="html"><![CDATA[대략 4주간의 SQLD 자격증 준비 기간과 시험 후기]]></summary></entry><entry><title type="html">SQLD 공부 실전문제 오답노트 - PART 1 - CH1. 데이터 모델링의 이해</title><link href="https://seulwithlove.github.io/blog/2024/get-sqld-exercise-5/" rel="alternate" type="text/html" title="SQLD 공부 실전문제 오답노트 - PART 1 - CH1. 데이터 모델링의 이해"/><published>2024-05-23T00:00:00+00:00</published><updated>2024-05-23T00:00:00+00:00</updated><id>https://seulwithlove.github.io/blog/2024/get-sqld-exercise-5</id><content type="html" xml:base="https://seulwithlove.github.io/blog/2024/get-sqld-exercise-5/"><![CDATA[<h1 id="sqld---week-5---실전문제-part1---1-데이터-모델링의-이해">SQLD - Week 5 - 실전문제 Part1 - 1. 데이터 모델링의 이해</h1> <h2 id="12번">12번</h2> <h3 id="발생시점에-따른-엔터티-분류">발생시점에 따른 엔터티 분류</h3> <ul> <li>기본 -&gt; 중심 -&gt; 행위 <ul> <li><strong>기본</strong> : 독립적으로 생성됨, 고유한 주식별자를 가짐 <ul> <li>업무에 원래 존재하는 정보</li> <li>자식 엔터티를 가질수 있음 <ul> <li>상품, 회원</li> </ul> </li> </ul> </li> <li><strong>중심</strong> : 기본 엔터티에서 파생, 행위 엔터티를 생성 <ul> <li>업무에서 핵심 역할을 함</li> <li>데이터 양이 많이 발생 <ul> <li>주문, 매출, 계약</li> </ul> </li> </ul> </li> <li><strong>행위</strong> : 2개 이상의 엔터티에서 파생 <ul> <li>자주 내용이 바뀌거나 데이터 양이 증가</li> <li>분석 초기 단계보다 상세 설계단계/프로세스와 상관모델링을 진행하면서 도출 <ul> <li>주문내역, 이벤트 응모 이력</li> </ul> </li> </ul> </li> </ul> </li> </ul> <h2 id="16번">16번</h2> <h3 id="정규화">정규화</h3> <ul> <li>2차 정규화 : 1차정규형을 만족하고, 모든 non-key 컬럼은 PK 전체에 종속되어야 함</li> </ul> <h2 id="19번">19번</h2> <h3 id="속성명-부여-주의사항">속성명 부여 주의사항</h3> <ul> <li>해당 업무에서 사용하는 이름 부여</li> <li>서술식 속성명은 사용X</li> <li>약어 사용은 가급적 제한</li> <li>전체 데이터 모델에서 유일성 확보</li> </ul> <h2 id="22번">22번</h2> <h3 id="3단계-스키마-구조">3단계 스키마 구조</h3> <ul> <li> <p>ANSI-SPARC에서 정의한 3단계 스키마 구조<br/> 1) 외부 스키마 : <u>View 단계</u>로 여러 사용자 관점으로 구성된 개인적 DB 스키마<br/> 2) 개념 스키마 : <u>모든 사용자 관점을 통합</u>한 전체 DB<br/> - 위 두 단계에서 논리적인 데이터 독립성을 고려<br/> 3) 내부 스키마 : 물리적인 저장구조 - 데이터 저장구조, 컬럼 정의, 인덱스 등<br/></p> </li> <li> <p>특징 : 데이터 독립성 보장</p> <ul> <li>논리적 독립성 : 개념 스키마 변경 -&gt; 외부 스키마 영향 X <ul> <li>논리적인 구조가 변경되어도 응용프로그램 영향도는 X</li> <li>사용자 특성에 맞게 변경 가능, 통합 구조의 변경도 가능</li> </ul> </li> <li>물리적 독립성 : 내부 스키마 변경 -&gt; 외부/개념 스키마 영향 X <ul> <li>데이터베이스 파일 구조의 변화가 논리스키마에 영향을 주지 X</li> <li>데이터베이스 색인구조 변화가 응용프로그램에 영향을 주지 X</li> </ul> </li> </ul> </li> </ul> <h2 id="25번">25번</h2> <h3 id="두-엔터티-사이의-관계를-도출할때-확인해야할-사항">두 엔터티 사이의 관계를 도출할때 확인해야할 사항</h3> <ul> <li>두 개의 엔터티 사이에 <strong>관심 있는 연관규칙이 존재</strong>하는가?</li> <li>두 개의 엔터티 사이에 <strong>정보의 조합이 발생</strong>하는가?</li> <li>업무기술서, 장표에 <strong>관계연결에 대한 규칙이 서술</strong>되어 있는가?</li> <li>업무기술서, 장표에 <strong>관계연결을 가능하게 하는 동사</strong>가 있는가?</li> </ul> <h2 id="27번">27번</h2> <h3 id="인조식별자">인조식별자</h3> <ul> <li>인위적으로 만들어지는 식별자 (꼭 필요하지 않지만 관리의 편이성 등의 이유로 인위적으로 만들어지는 식별자) <ul> <li>본질식별자가 복잡한 구성을 가질때 인위적으로 생성(후보 식별자중 PK로 선정할 만한게 없을때)</li> <li>꼭 필요한 경우에만 사용을 권장</li> </ul> </li> <li>주로 각 행을 구분하기 위한 기본키로 사용 <ul> <li>자동으로 증가하는 일련번호 같은 형태</li> <li>e.g. 매매 엔터티의 매매번호</li> </ul> </li> <li>참고: <a href="https://blog.cslee.co.kr/data-modelling/">블로그</a></li> </ul> <h2 id="28번">28번</h2> <ul> <li>이름은 동명이인이 있을수 있기떄문에 주식별자로 사용하기 부적합함</li> </ul> <h2 id="34번">34번</h2> <h3 id="함수-종속성-functional-dependency">함수 종속성 Functional Dependency</h3> <ul> <li>함수처럼 어떠한 값을 통해 종속 관계에 있는 다른 값을 유일하게 결정할수 있다 <ul> <li>e.g. 테이블에 [생일], [나이]라는 컬럼이 존재할때 <ul> <li>[나이]는 [생일]에 종속한다 : 생일을 알고 있으면 나이를 참조하지 않아도 나이를 결정할수 있음</li> </ul> </li> </ul> </li> <li>데이터베이스 설계단계에서 함수 종속 관계를 찾으면 중복된 데이터를 줄일수 있음</li> </ul> <h3 id="함수-종속의-성질암스트롱의-공리-armstrongs-axioms">함수 종속의 성질(암스트롱의 공리 Armstrong’s axioms)</h3> <ul> <li>augmentation : X → Y이면, XZ → YZ</li> <li>transitivity : X → Y이고 Y → Z이면, X → Z</li> <li>reflexivity : Y $\sub$ X, X → Y</li> <li>self-determination : X → X (자기 자신은 자신에 의해 함수 종속적이다)</li> <li>union : X → Y이고 X → Z이면, X → YZ</li> <li>decomposition : X → YZ이면, X → Y이고 X → Z</li> </ul> <h2 id="35번-40-41-44번">35번, 40, 41, 44번</h2> <h4 id="정규화-단계">정규화 단계</h4> <ol> <li>제1정규형(1 Normal Form: 1NF) : 엔터티의 모든 속성은 반드시 하나의 값만 가져야 한다 <ul> <li><u>유사한 속성이 반복</u>되면 -&gt; 1차 정규화!</li> <li>테이블의 컬럼은 하나의 값(원자값)을 갖도록 테이블 분해</li> </ul> </li> <li>제2정규형(2 Normal Form: 2NF) : 엔터티의 모든 속성은 반드시 모든 주식별자에 종속되어야한다 <ul> <li><u>어떤 속성이 일부 주식별자에만 종속</u>되어있다면 -&gt; 2차 정규화!</li> <li>부분 함수 종속성 제거 : 완전 함수 종속 만족 <ul> <li>릴레이션에서 종속자가 기본키가 아닌 다른 속성에 종속되거나, 기본키가 여러 속성으로 되어있을때 <ul> <li>기본키를 구성하는 속성 중 일부만 종속된 경우</li> </ul> </li> </ul> </li> </ul> </li> <li>제3정규형(3 Normal Form; 3NF) : 주식별자가 아닌 모든 속성간에는 서로 종속될수 없다 <ul> <li><u>2차 정규화를 진행한 테이블</u>에 <strong>이행적 종속</strong>이 없도록 테이블을 분해하는 것 <ul> <li>이행적 종속 : A → B, B → C 성립할때 A → C가 성립하는 것</li> </ul> </li> <li>이행함수 종속성 제거</li> <li><u>속성간에 종속</u>되어있다면 -&gt; 3차 정규화! <ul> <li>기본키가 있는데 일반속성이 일반속성을 결정하는 경우</li> </ul> </li> </ul> </li> <li>제4정규형 : 다중값 종속성 제거 -&gt; 4차 정규화!</li> </ol>]]></content><author><name></name></author><category term="study"/><category term="자격증"/><category term="sqld"/><category term="skill-stacking"/><summary type="html"><![CDATA[SQLD 5주차 공부 기록]]></summary></entry><entry><title type="html">SQLD 공부 실전문제 오답노트 - PART 2 - CH3. 관리구문</title><link href="https://seulwithlove.github.io/blog/2024/get-sqld-exercise-4/" rel="alternate" type="text/html" title="SQLD 공부 실전문제 오답노트 - PART 2 - CH3. 관리구문"/><published>2024-05-22T00:00:00+00:00</published><updated>2024-05-22T00:00:00+00:00</updated><id>https://seulwithlove.github.io/blog/2024/get-sqld-exercise-4</id><content type="html" xml:base="https://seulwithlove.github.io/blog/2024/get-sqld-exercise-4/"><![CDATA[<h1 id="sqld---week-5---실전문제-part2---3-관리구문">SQLD - Week 5 - 실전문제 Part2 - 3. 관리구문</h1> <h2 id="99번">99번</h2> <ul> <li>NULL / NOT NULL 잘 보기!</li> </ul> <h2 id="101번">101번</h2> <h3 id="tcltransaction-control-language-특성">TCL(Transaction Control Language) 특성</h3> <ul> <li>원자성(atomicity) : 트랜잭션 정의된 연산들 <strong>모두 성공적으로 실행되던지 아니면 전혀 실행되지 않은 상태</strong>로 남아 있어야 함 <ul> <li>모두 성공하거나 모두 실패하거나</li> </ul> </li> <li>일관성(consistency) : 트랜잭션 <strong>실행 전 데이터베이스 내용이 잘못되어 있지 않다면</strong> 트랜잭션 <strong>실행 이후에도 데이터베이스 내용의 잘못이 있으면 안됨</strong></li> <li>고립성(isolation) : <strong>트랜잭션 실행도중 다른 트랜잭션의 영향을 받아 잘못된 결과를 만들어서는 안됨</strong></li> <li>지속성(durability) : 트랜잭션이 성공적으로 수행되면 갱신한 데이터베이스 내용이 영구적으로 저장</li> </ul> <h2 id="107번">107번</h2> <ul> <li>PRIMARY KEY로 등록되면 자동으로 NOT NULL 속성을 가짐</li> </ul> <h2 id="108번">108번</h2> <h3 id="데이터-무결성integrity">데이터 무결성(integrity)</h3> <ul> <li>데이터의 정확성과 일관성을 유지하고, 데이터에 결손과 부정합이 없을을 보증</li> <li>참조 무결성 : 외래키 값은 NULL 이거나 참조 테이블의 기본키 값과 동일해야함 <ul> <li>외래키는 참조 테이블의 기본키에 정의된 데이터만 허용되는 구조이므로</li> </ul> </li> </ul> <h2 id="109번">109번</h2> <ul> <li>Natural key: an attribute that can uniquely identify a row, and exists in the real world.</li> <li>Surrogate key(대리키): an attribute that can uniquely identify a row, and does not exist in the real world.</li> <li>Composite key: more than one attribute that when combined can uniquely identify a row.</li> <li>Primary key(기본키): the single unique identifier for the row.</li> <li><strong>Candidate key(후보키): an attribute that could be the primary key.</strong> <ul> <li><strong>A candidate key</strong> is <strong>a key that uniquely identifies rows in a table.</strong></li> <li>Any of the identified candidate keys <u>can be used as the table's primary key.</u></li> <li>Candidate keys that are not part of the primary key are called alternate keys. <ul> <li>출처 : <a href="https://www.orafaq.com/wiki/Candidate_key">oraclefaq</a></li> </ul> </li> </ul> </li> <li>Alternate key: a candidate key that is not the primary key.</li> <li>Unique key: an attribute that can be unique on the table. Can also be called an alternate key.</li> <li>Foreign key(외래키): an attribute that is used to refer to another record in another table. <ul> <li>출처: <a href="https://www.databasestar.com/database-keys/#:~:text=Surrogate%20key%3A%20an%20attribute%20that,could%20be%20the%20primary%20key.">Databasestar</a></li> </ul> </li> </ul> <h2 id="110번">110번</h2> <ul> <li>DROP COLUMN : 컬럼 삭제 <ul> <li><code>ALTER TABLE table_name DROP COLUMN column_name;</code></li> </ul> </li> </ul> <h2 id="113번">113번</h2> <ul> <li>답지 259페이지 정리</li> </ul> <h2 id="115번">115번</h2> <ul> <li>묵시적 형변환(데이터 타입을 자동으로 변환) <ul> <li>VARCHAR2 → NUMBER</li> <li>VARCHAR2 → DATE</li> <li>NUMBER → VARCHAR2</li> <li>DATE → VARCHAR2</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="study"/><category term="자격증"/><category term="sqld"/><category term="skill-stacking"/><summary type="html"><![CDATA[SQLD 5주차 공부 기록]]></summary></entry><entry><title type="html">SQLD 공부 실전문제 오답노트 - PART 2 - CH2. SQL 활용 - 2</title><link href="https://seulwithlove.github.io/blog/2024/get-sqld-exercise-3/" rel="alternate" type="text/html" title="SQLD 공부 실전문제 오답노트 - PART 2 - CH2. SQL 활용 - 2"/><published>2024-05-21T00:00:00+00:00</published><updated>2024-05-21T00:00:00+00:00</updated><id>https://seulwithlove.github.io/blog/2024/get-sqld-exercise-3</id><content type="html" xml:base="https://seulwithlove.github.io/blog/2024/get-sqld-exercise-3/"><![CDATA[<h1 id="sqld---week-5---실전문제-part2---2-sql-활용">SQLD - Week 5 - 실전문제 Part2 - 2. SQL 활용</h1> <ul> <li>&lt;<a href="https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=332583104">SQL 자격검정 실전문제</a>&gt; (일명 노랭이) 개정판 1회독 + 오답노트 <ul> <li>출제 비중이 높은 Part 2 부터 시작</li> </ul> </li> <li>오답노트하며 중요한 개념 정리</li> </ul> <h2 id="61번">61번</h2> <ul> <li>계층형 질의에서 루트노드는 <strong>LEVEL 1</strong>부터 시작 <ul> <li>START WITH 절에 해당하는 행은 조건절과 상관없이 결과에 출력됨</li> </ul> </li> <li>START WITH 에서 지정한 행을 LEVEL 1로 지정 <ul> <li>홍길동, 이병헌 행이 LEVEL 1</li> </ul> </li> <li>CONNECT BY절의 PRIOR 바로 다음에 있는 컬럼을 기준으로 ‘=’ 이후의 컬럼과 맞췄을때 같은 데이터가 있는 행이 LEVEL 2 <ul> <li>사원번호 001, 005와 같은 매니저사원번호 행이 LEVEL 2</li> <li>남은 6명 모두 LEVEL 2 =&gt; 매니저만 두고 모두 동일 레벨</li> </ul> </li> </ul> <h2 id="64번">64번</h2> <ul> <li>WHERE 절은 계층형질의 전개 완료후에 필터링하기위한 조건절 <ul> <li>4번 FROM 절 안의 1)서브쿼리에서 <ul> <li>START WITH 2)서브쿼리 의 ‘START WITH~’ 전개 후에 나오는 결과에서 <ul> <li>WHERE 절에 해당하는 결과를 출력</li> <li>2)서브쿼리 결과: 100</li> </ul> </li> </ul> </li> </ul> </li> <li>LEFT OUTER JOIN - ON 이랑 세트</li> <li><em>한 세트(묶음끼리)를 잘 구분해서 정리</em></li> </ul> <h2 id="65번">65번</h2> <ul> <li><em>문제에서 테이블을 직접 만드는 경우 대략적으로 결과테이블 그려놓기</em></li> </ul> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span><span style="color: #666666">*</span>
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>T1<span style="color: #bbbbbb"> </span>A,
<span style="color: #bbbbbb">     </span>T2<span style="color: #bbbbbb"> </span>B
</pre></div> <pre><code>쿼리 실행 결과:
</code></pre> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>NO</th> <th>COLA</th> <th>NO</th> <th>COLB</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>1</td> <td>AAA</td> <td>1</td> <td>BBB</td> </tr> <tr> <th>1</th> <td>1</td> <td>AAA</td> <td>3</td> <td>CCC</td> </tr> </tbody> </table> </div> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>B.<span style="color: #008000; font-weight: bold">NO</span>,
<span style="color: #bbbbbb">       </span>A.COLA,
<span style="color: #bbbbbb">       </span>B.COLB
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>T1<span style="color: #bbbbbb"> </span>A
<span style="color: #008000; font-weight: bold">CROSS</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">JOIN</span><span style="color: #bbbbbb"> </span>T2<span style="color: #bbbbbb"> </span>B
</pre></div> <pre><code>쿼리 실행 결과:
</code></pre> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>NO</th> <th>COLA</th> <th>COLB</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>1</td> <td>AAA</td> <td>BBB</td> </tr> <tr> <th>1</th> <td>3</td> <td>AAA</td> <td>CCC</td> </tr> </tbody> </table> </div> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">NO</span>,
<span style="color: #bbbbbb">       </span>A.COLA,
<span style="color: #bbbbbb">       </span>B.COLB
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>T1<span style="color: #bbbbbb"> </span>A
<span style="color: #008000; font-weight: bold">NATURAL</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">JOIN</span><span style="color: #bbbbbb"> </span>T2<span style="color: #bbbbbb"> </span>B
</pre></div> <pre><code>쿼리 실행 결과:
</code></pre> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>NO</th> <th>COLA</th> <th>COLB</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>1</td> <td>AAA</td> <td>BBB</td> </tr> </tbody> </table> </div> <ul> <li>USING 절엔 ‘()’ 생략 불가!</li> <li>CROSS JOIN : 조건없이 조인할 경우 → 실행 가능한 모든 행 출력 <ul> <li>A.NO만 출력했기 때문에 ‘NO = 1’ 만 출력됨</li> </ul> </li> <li>NATURAL JOIN : 조인조건 없이 컬럼명이 같을때 사용 <ul> <li>조인조건 생략시 두 테이블에 같은 컬럼 이름이 있는 행을 연결(출력)</li> </ul> </li> </ul> <h2 id="66번">66번</h2> <ul> <li>셀프조인 SELF JOIN <ul> <li>테이블의 행을 하나씩 만들어감</li> </ul> </li> </ul> <h2 id="69번">69번</h2> <h3 id="윈도우함수">윈도우함수</h3> <ul> <li>RANK : 전체/특정 그룹 중 값의 순위 <ul> <li>값이 같으면 동일한 순위</li> <li>다음 순위는 동순위 개수에 따라 순위 부여 <ul> <li>e.g. 2순위 3개 → 다음 순위: 5순위</li> </ul> </li> </ul> </li> <li>DENSE_RANK : 누적순위 <ul> <li>값이 같으면 동일한 순위</li> <li>다음 순위는 앞 순위와 바로 이어지는 순위 부여 <ul> <li>e.g. 2순위 3개 → 다음 순위: 3순위</li> </ul> </li> </ul> </li> <li>CUME_DIST : 누적비율</li> <li>PERCENT_RANK : 분위수 <ul> <li>전체 COUNT 중 상대적 위치(0~1 범위 내)</li> </ul> </li> <li>RATIO_TO_REPORT : 각 값의 비율 리턴 <ul> <li>ORDER BY X</li> </ul> </li> <li>NTILE : 행을 특정 컬럼 순서에 따라 정해진 수(N)의 그룹으로 나누기 위한 함수 <ul> <li><code>SELECT NTILE(N) OVER ([PARTITION BY 컬럼] ORDER BY 컬럼 ASC | DESC)</code></li> <li>그룹 번호가 리턴</li> <li>ORDER BY 필수</li> </ul> </li> </ul> <h2 id="70번">70번</h2> <ul> <li>HAVING : GROUP BY 절의 필터링 조건절</li> </ul> <h3 id="select-1">SELECT 1</h3> <ul> <li>해당 테이블의 값을 1로 리턴</li> <li>WHERE 절에서 사용할 경우 조건을 만족하면 1 리턴 <ul> <li><code>WHERE EXISTS (SELECT 1 ...)</code></li> </ul> </li> <li>실제값이 아닌 ‘<strong>존재 유무</strong>‘가 중요할때 사용</li> </ul> <h3 id="where-0-의미">‘WHERE 0 &lt;’의미</h3> <ul> <li>서브쿼리에서 리턴하는 행이 있는지를 확인하기 위함</li> <li>리턴하는 행이 있으면 True : 해당 조건의 행 출력</li> <li>리턴하는 행이 없으면 False : 아무행도 출력하지 X</li> </ul> <h2 id="77번">77번</h2> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span><span style="color: #666666">*</span>
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>사원ID</th> <th>부서ID</th> <th>연봉</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>1</td> <td>100</td> <td>2500</td> </tr> <tr> <th>1</th> <td>2</td> <td>100</td> <td>3000</td> </tr> <tr> <th>2</th> <td>3</td> <td>200</td> <td>4500</td> </tr> <tr> <th>3</th> <td>4</td> <td>200</td> <td>3000</td> </tr> <tr> <th>4</th> <td>5</td> <td>200</td> <td>2500</td> </tr> <tr> <th>5</th> <td>6</td> <td>300</td> <td>4500</td> </tr> <tr> <th>6</th> <td>7</td> <td>300</td> <td>3000</td> </tr> </tbody> </table> </div> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>ID,
<span style="color: #bbbbbb">       </span>ROW_NUMBER()<span style="color: #bbbbbb"> </span>OVER<span style="color: #bbbbbb"> </span>(PARTITION<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">부서</span>ID
<span style="color: #bbbbbb">                          </span><span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">연봉</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">DESC</span>)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>COL1,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">SUM</span>(<span style="border: 1px solid #FF0000">연봉</span>)<span style="color: #bbbbbb"> </span>OVER<span style="color: #bbbbbb"> </span>(PARTITION<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">부서</span>ID
<span style="color: #bbbbbb">                     </span><span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>ID<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROWS</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BETWEEN</span><span style="color: #bbbbbb"> </span>UNBOUNDED<span style="color: #bbbbbb"> </span>PRECEDING<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AND</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">CURRENT</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROW</span>)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>COL2,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">MAX</span>(<span style="border: 1px solid #FF0000">연봉</span>)<span style="color: #bbbbbb"> </span>OVER(
<span style="color: #bbbbbb">                    </span><span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">연봉</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">DESC</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROWS</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">CURRENT</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROW</span>)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>COL3
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>사원ID</th> <th>COL1</th> <th>COL2</th> <th>COL3</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>6</td> <td>1</td> <td>4500</td> <td>4500</td> </tr> <tr> <th>1</th> <td>3</td> <td>1</td> <td>4500</td> <td>4500</td> </tr> <tr> <th>2</th> <td>7</td> <td>2</td> <td>7500</td> <td>3000</td> </tr> <tr> <th>3</th> <td>2</td> <td>1</td> <td>5500</td> <td>3000</td> </tr> <tr> <th>4</th> <td>4</td> <td>2</td> <td>7500</td> <td>3000</td> </tr> <tr> <th>5</th> <td>1</td> <td>2</td> <td>2500</td> <td>2500</td> </tr> <tr> <th>6</th> <td>5</td> <td>3</td> <td>10000</td> <td>2500</td> </tr> </tbody> </table> </div> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>ID,
<span style="color: #bbbbbb">       </span>COL2,
<span style="color: #bbbbbb">       </span>COL3
<span style="color: #008000; font-weight: bold">FROM</span>
<span style="color: #bbbbbb">  </span>(<span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>ID,
<span style="color: #bbbbbb">          </span>ROW_NUMBER()<span style="color: #bbbbbb"> </span>OVER<span style="color: #bbbbbb"> </span>(PARTITION<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">부서</span>ID
<span style="color: #bbbbbb">                             </span><span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">연봉</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">DESC</span>)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>COL1,
<span style="color: #bbbbbb">          </span><span style="color: #008000; font-weight: bold">SUM</span>(<span style="border: 1px solid #FF0000">연봉</span>)<span style="color: #bbbbbb"> </span>OVER<span style="color: #bbbbbb"> </span>(PARTITION<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">부서</span>ID
<span style="color: #bbbbbb">                        </span><span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>ID<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROWS</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BETWEEN</span><span style="color: #bbbbbb"> </span>UNBOUNDED<span style="color: #bbbbbb"> </span>PRECEDING<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AND</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">CURRENT</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROW</span>)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>COL2,
<span style="color: #bbbbbb">          </span><span style="color: #008000; font-weight: bold">MAX</span>(<span style="border: 1px solid #FF0000">연봉</span>)<span style="color: #bbbbbb"> </span>OVER(
<span style="color: #bbbbbb">                       </span><span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">연봉</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">DESC</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROWS</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">CURRENT</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROW</span>)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>COL3
<span style="color: #bbbbbb">   </span><span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>)
<span style="color: #008000; font-weight: bold">WHERE</span><span style="color: #bbbbbb"> </span>COL1<span style="color: #666666">=2</span>
<span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #666666">1</span>
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>사원ID</th> <th>COL2</th> <th>COL3</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>1</td> <td>2500</td> <td>2500</td> </tr> <tr> <th>1</th> <td>4</td> <td>7500</td> <td>3000</td> </tr> <tr> <th>2</th> <td>7</td> <td>7500</td> <td>3000</td> </tr> </tbody> </table> </div> <h3 id="rows-between-a-and-b-구문-파헤쳐보기"><code>ROWS BETWEEN A AND B</code> 구문 파헤쳐보기</h3> <ul> <li>UNBOUNDED PRECEDING, CURRENT ROW를 어떻게 구분하지? 현재 시점과 처음 시점은 어디를 기준으로 잡을까?</li> </ul> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>ID,
<span style="color: #bbbbbb">       </span><span style="border: 1px solid #FF0000">부서</span>ID,
<span style="color: #bbbbbb">       </span><span style="border: 1px solid #FF0000">연봉</span>,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">SUM</span>(<span style="border: 1px solid #FF0000">연봉</span>)<span style="color: #bbbbbb"> </span>OVER<span style="color: #bbbbbb"> </span>(PARTITION<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">부서</span>ID
<span style="color: #bbbbbb">                     </span><span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>ID<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROWS</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BETWEEN</span><span style="color: #bbbbbb"> </span>UNBOUNDED<span style="color: #bbbbbb"> </span>PRECEDING<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AND</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">CURRENT</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROW</span>)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>col2,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">SUM</span>(<span style="border: 1px solid #FF0000">연봉</span>)<span style="color: #bbbbbb"> </span>OVER<span style="color: #bbbbbb"> </span>(PARTITION<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">부서</span>ID
<span style="color: #bbbbbb">                     </span><span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>ID<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROWS</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BETWEEN</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">CURRENT</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROW</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AND</span><span style="color: #bbbbbb"> </span>UNBOUNDED<span style="color: #bbbbbb"> </span>FOLLOWING)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>col2_2
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>사원ID</th> <th>부서ID</th> <th>연봉</th> <th>COL2</th> <th>COL2_2</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>1</td> <td>100</td> <td>2500</td> <td>2500</td> <td>5500</td> </tr> <tr> <th>1</th> <td>2</td> <td>100</td> <td>3000</td> <td>5500</td> <td>3000</td> </tr> <tr> <th>2</th> <td>3</td> <td>200</td> <td>4500</td> <td>4500</td> <td>10000</td> </tr> <tr> <th>3</th> <td>4</td> <td>200</td> <td>3000</td> <td>7500</td> <td>5500</td> </tr> <tr> <th>4</th> <td>5</td> <td>200</td> <td>2500</td> <td>10000</td> <td>2500</td> </tr> <tr> <th>5</th> <td>6</td> <td>300</td> <td>4500</td> <td>4500</td> <td>7500</td> </tr> <tr> <th>6</th> <td>7</td> <td>300</td> <td>3000</td> <td>7500</td> <td>3000</td> </tr> </tbody> </table> </div> <ul> <li>PARTITION된 영역 기준! <ul> <li>UNBOUNDED PRECEDING은 입력할 행의 위치와 상관없이 파티션된 영역의 첫번째 행을 의미</li> <li>CURRENT ROW는 데이터를 채워야할/입력할 행의 위치! : 계속 이동한다</li> </ul> </li> <li>COL2는 파티션영역내 첫행부터 현재행(이동위치)에 따라 합을 구하기떄문에 아래로 누적합 형태가 나오고,</li> <li>COL2-2는 현재행(이동위치)부터 파티션영역내 마지막 행까지의 합을 구하기때문에 합계가 점차 줄어드는 형태가 된다.</li> </ul> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>ID,
<span style="color: #bbbbbb">       </span><span style="border: 1px solid #FF0000">연봉</span>
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>
<span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">연봉</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">DESC</span>
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>사원ID</th> <th>연봉</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>6</td> <td>4500</td> </tr> <tr> <th>1</th> <td>3</td> <td>4500</td> </tr> <tr> <th>2</th> <td>7</td> <td>3000</td> </tr> <tr> <th>3</th> <td>2</td> <td>3000</td> </tr> <tr> <th>4</th> <td>4</td> <td>3000</td> </tr> <tr> <th>5</th> <td>1</td> <td>2500</td> </tr> <tr> <th>6</th> <td>5</td> <td>2500</td> </tr> </tbody> </table> </div> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>ID,
<span style="color: #bbbbbb">       </span>col3
<span style="color: #008000; font-weight: bold">FROM</span>
<span style="color: #bbbbbb">  </span>(<span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>ID,
<span style="color: #bbbbbb">          </span><span style="color: #008000; font-weight: bold">max</span>(<span style="border: 1px solid #FF0000">연봉</span>)<span style="color: #bbbbbb"> </span>over(
<span style="color: #bbbbbb">                       </span><span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">연봉</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">DESC</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROWS</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">CURRENT</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROW</span>)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>col3
<span style="color: #bbbbbb">   </span><span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span><span style="border: 1px solid #FF0000">사원</span>)
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>사원ID</th> <th>COL3</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>6</td> <td>4500</td> </tr> <tr> <th>1</th> <td>3</td> <td>4500</td> </tr> <tr> <th>2</th> <td>7</td> <td>3000</td> </tr> <tr> <th>3</th> <td>2</td> <td>3000</td> </tr> <tr> <th>4</th> <td>4</td> <td>3000</td> </tr> <tr> <th>5</th> <td>1</td> <td>2500</td> </tr> <tr> <th>6</th> <td>5</td> <td>2500</td> </tr> </tbody> </table> </div> <ul> <li><code>ROWS CURRENT ROW</code> : <code>BETWEEN</code>+ <code>AND CURRENT ROW</code> 가 생략된것 <ul> <li>= <code>ROWS BETWEEN CURRENT ROW AND CURRENT ROW</code></li> </ul> </li> <li>결국 현재 행 내에서 MAX(연봉)을 구하기때문에 해당 행의 연봉이 그대로 출력된다</li> </ul> <h2 id="78번">78번</h2> <h3 id="grouping-함수">GROUPING 함수</h3> <ul> <li><a href="https://learn.microsoft.com/en-us/sql/t-sql/functions/grouping-transact-sql?view=sql-server-ver16">Microsoft Learn의 SQL Server 페이지 설명</a>은 다음과 같음 <blockquote> <p>Indicates whether <strong>a specified column expression in a GROUP BY list is aggregated or not.</strong><br/> GROUPING returns 1 for aggregated or 0 for not aggregated in the result set.<br/>GROUPING can be used only in the SELECT &lt;select&gt; list, HAVING, and ORDER BY clauses when GROUP BY is specified.</p> </blockquote> </li> <li>공식 정의에 따르면 ‘GROUP BY 절에서 지정한 컬럼에 대한 집계생성 여부를 반환한다’는 의미 <ul> <li>해당 컬럼이 집계되었다면 0, 그 외 1</li> </ul> </li> <li>ROLLUP, CUBE, GROUPING SETS 함수가 리턴하는 NULL과 일반 NULL을 구분하기 위해 사용 <ul> <li>위 함수들이 리턴하는 NULL은 column placeholder 역할을 함</li> </ul> </li> <li>하지만 이 설명은 뭔가 복잡함. 그래서 대부분 아래처럼 정의하는 듯함. 직관적으로 이해는 되지만 어쨌든 GROUPING 함수의 용도를 잘 기억하자! <br/></li> <li>GROUP BY 결과로 “NULL이 생성된 경우” 1을 리턴하는 함수 <ul> <li>GROUP BY 결과에 NULL이 있으면 : 1</li> </ul> </li> <li>GROUP BY 절 필수! <ul> <li>위 조건을 충족하면, SELECT 절 / HAVING 절 / ORDER BY 절에서만 사용가능</li> </ul> </li> <li><em>MIN(B.지역명)은 아직 이해가 안됨…😣</em></li> </ul> <h2 id="79번">79번</h2> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>empno,
<span style="color: #bbbbbb">       </span>sal
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>emp
<span style="color: #008000; font-weight: bold">WHERE</span><span style="color: #bbbbbb"> </span>sal<span style="color: #bbbbbb"> </span><span style="color: #666666">&gt;=</span>
<span style="color: #bbbbbb">    </span>(<span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">max</span>(sal)
<span style="color: #bbbbbb">     </span><span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>emp
<span style="color: #bbbbbb">     </span><span style="color: #008000; font-weight: bold">GROUP</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span>deptno)
</pre></div> <pre><code>쿼리 실행 중 오류 발생:
ORA-01427: single-row subquery returns more than one row
Help: https://docs.oracle.com/error-help/db/ora-01427/
</code></pre> <h2 id="80번">80번</h2> <ul> <li><em>GROUP BY FUNCTION 종류별로 정리 꼼꼼히!!</em> <ul> <li>여러 GROUP BY 결과를 동시에 출력(합집합)</li> </ul> </li> </ul> <h3 id="grouping-setsa-b-">GROUPING SETS(A, B, …)</h3> <ul> <li>A, B별 그룹 연산 결과 출력 <ul> <li>GROUPING SETS에 나열한 대상에 대해 <strong>각 GROUP BY 결과</strong>를 출력</li> </ul> </li> <li>나열 순서 중요하지X</li> <li><strong>전체 총계는 출력X</strong> <ul> <li>전체 총계 출력하려면 : NULL 혹은 <code>()</code> 사용</li> </ul> </li> <li>’= UNION ALL’ : 빈 컬럼 NULL로 맞춰줘야함</li> </ul> <h3 id="rollupa-b">ROLLUP(A, B)</h3> <ul> <li>A별, (A, B)별, 전체 그룹 연산 결과 출력</li> <li>나열 대상의 <strong>순서</strong> 중요! <ul> <li>나열된 컬럼의 계층 구조로 집계 출력</li> </ul> </li> <li>UNION ALL로 대체 가능 : 빈 컬럼 NULL로 맞춰줘야함</li> </ul> <h3 id="cubeab">CUBE(A,B)</h3> <ul> <li>A별, (A, B)별, 전체 그룹 연산 결과 출력</li> <li>모든 조합의 경우의 수 모두 출력</li> <li>나열 대상의 순서 중요X</li> <li>UNION ALL, GROUPING SETS로 대체 가능</li> </ul> <h2 id="82번">82번</h2> <ul> <li>원래 ROLLUP (JOB, DEPTNO)를 하면 다음처럼 주어진 컬럼명 나열순을 기준으로 레벨별 집계가 반환된다</li> </ul> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>A.JOB,
<span style="color: #bbbbbb">       </span>A.DEPTNO,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">SUM</span>(SAL)
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>EMP<span style="color: #bbbbbb"> </span>A
<span style="color: #008000; font-weight: bold">GROUP</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROLLUP</span><span style="color: #bbbbbb"> </span>(JOB,
<span style="color: #bbbbbb">                 </span>DEPTNO)
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>JOB</th> <th>DEPTNO</th> <th>SUM(SAL)</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>CLERK</td> <td>20.0</td> <td>1900</td> </tr> <tr> <th>1</th> <td>SALESMAN</td> <td>30.0</td> <td>5600</td> </tr> <tr> <th>2</th> <td>MANAGER</td> <td>20.0</td> <td>2975</td> </tr> <tr> <th>3</th> <td>MANAGER</td> <td>30.0</td> <td>2850</td> </tr> <tr> <th>4</th> <td>MANAGER</td> <td>10.0</td> <td>2450</td> </tr> <tr> <th>5</th> <td>ANALYST</td> <td>20.0</td> <td>6000</td> </tr> <tr> <th>6</th> <td>PRESIDENT</td> <td>10.0</td> <td>5000</td> </tr> <tr> <th>7</th> <td>CLERK</td> <td>30.0</td> <td>950</td> </tr> <tr> <th>8</th> <td>CLERK</td> <td>10.0</td> <td>1300</td> </tr> <tr> <th>9</th> <td>CLERK</td> <td>NaN</td> <td>4150</td> </tr> <tr> <th>10</th> <td>SALESMAN</td> <td>NaN</td> <td>5600</td> </tr> <tr> <th>11</th> <td>MANAGER</td> <td>NaN</td> <td>8275</td> </tr> <tr> <th>12</th> <td>ANALYST</td> <td>NaN</td> <td>6000</td> </tr> <tr> <th>13</th> <td>PRESIDENT</td> <td>NaN</td> <td>5000</td> </tr> <tr> <th>14</th> <td>None</td> <td>NaN</td> <td>29025</td> </tr> </tbody> </table> </div> <ul> <li>하지만 <code>ROLLUP ((A, B))</code> 이런식으로 괄호를 두 번 감싸면 컬럼별 집계와 맨 마지막 전체 집계만 출력가능</li> </ul> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>A.JOB,
<span style="color: #bbbbbb">       </span>A.DEPTNO,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">SUM</span>(SAL)
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>EMP<span style="color: #bbbbbb"> </span>A
<span style="color: #008000; font-weight: bold">GROUP</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROLLUP</span><span style="color: #bbbbbb"> </span>((JOB,
<span style="color: #bbbbbb">                  </span>DEPTNO))
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>JOB</th> <th>DEPTNO</th> <th>SUM(SAL)</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>CLERK</td> <td>20.0</td> <td>1900</td> </tr> <tr> <th>1</th> <td>SALESMAN</td> <td>30.0</td> <td>5600</td> </tr> <tr> <th>2</th> <td>MANAGER</td> <td>20.0</td> <td>2975</td> </tr> <tr> <th>3</th> <td>MANAGER</td> <td>30.0</td> <td>2850</td> </tr> <tr> <th>4</th> <td>MANAGER</td> <td>10.0</td> <td>2450</td> </tr> <tr> <th>5</th> <td>ANALYST</td> <td>20.0</td> <td>6000</td> </tr> <tr> <th>6</th> <td>PRESIDENT</td> <td>10.0</td> <td>5000</td> </tr> <tr> <th>7</th> <td>CLERK</td> <td>30.0</td> <td>950</td> </tr> <tr> <th>8</th> <td>CLERK</td> <td>10.0</td> <td>1300</td> </tr> <tr> <th>9</th> <td>None</td> <td>NaN</td> <td>29025</td> </tr> </tbody> </table> </div> <ul> <li>문제에서는 평균값을 출력하는 행 하나만 있기때문에 괄호 2개로 전체 총합 소계만 출력하는게 필요</li> </ul> <h2 id="83번">83번</h2> <ul> <li><code>GROUPING SETS ((A, B))</code> : A, B 두개의 컬럼을 그룹으로 만들어 소계를 집계 <ul> <li><code>GROUP BY A, B</code> 와 동일한 결과</li> </ul> </li> <li>참고 : <a href="https://gent.tistory.com/279">블로그</a></li> </ul> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>job,
<span style="color: #bbbbbb">       </span>deptno,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">count</span>(<span style="color: #666666">*</span>)<span style="color: #bbbbbb"> </span>cnt
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>emp
<span style="color: #008000; font-weight: bold">GROUP</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">GROUPING</span>
<span style="color: #008000; font-weight: bold">SETS</span><span style="color: #bbbbbb"> </span>((job,
<span style="color: #bbbbbb">       </span>deptno))
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>JOB</th> <th>DEPTNO</th> <th>CNT</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>CLERK</td> <td>20</td> <td>2</td> </tr> <tr> <th>1</th> <td>SALESMAN</td> <td>30</td> <td>4</td> </tr> <tr> <th>2</th> <td>MANAGER</td> <td>20</td> <td>1</td> </tr> <tr> <th>3</th> <td>MANAGER</td> <td>30</td> <td>1</td> </tr> <tr> <th>4</th> <td>MANAGER</td> <td>10</td> <td>1</td> </tr> <tr> <th>5</th> <td>ANALYST</td> <td>20</td> <td>2</td> </tr> <tr> <th>6</th> <td>PRESIDENT</td> <td>10</td> <td>1</td> </tr> <tr> <th>7</th> <td>CLERK</td> <td>30</td> <td>1</td> </tr> <tr> <th>8</th> <td>CLERK</td> <td>10</td> <td>1</td> </tr> </tbody> </table> </div> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>job,
<span style="color: #bbbbbb">       </span>deptno,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">count</span>(<span style="color: #666666">*</span>)<span style="color: #bbbbbb"> </span>cnt
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>emp
<span style="color: #008000; font-weight: bold">GROUP</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span>job,
<span style="color: #bbbbbb">         </span>deptno
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>JOB</th> <th>DEPTNO</th> <th>CNT</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>CLERK</td> <td>20</td> <td>2</td> </tr> <tr> <th>1</th> <td>SALESMAN</td> <td>30</td> <td>4</td> </tr> <tr> <th>2</th> <td>MANAGER</td> <td>20</td> <td>1</td> </tr> <tr> <th>3</th> <td>MANAGER</td> <td>30</td> <td>1</td> </tr> <tr> <th>4</th> <td>MANAGER</td> <td>10</td> <td>1</td> </tr> <tr> <th>5</th> <td>ANALYST</td> <td>20</td> <td>2</td> </tr> <tr> <th>6</th> <td>PRESIDENT</td> <td>10</td> <td>1</td> </tr> <tr> <th>7</th> <td>CLERK</td> <td>30</td> <td>1</td> </tr> <tr> <th>8</th> <td>CLERK</td> <td>10</td> <td>1</td> </tr> </tbody> </table> </div> <ul> <li><code>GROUPING SETS (A, B)</code> 는 명시된 컬럼별 소계를 출력함</li> </ul> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>job,
<span style="color: #bbbbbb">       </span>deptno,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">count</span>(<span style="color: #666666">*</span>)<span style="color: #bbbbbb"> </span>cnt
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>emp
<span style="color: #008000; font-weight: bold">GROUP</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">GROUPING</span>
<span style="color: #008000; font-weight: bold">SETS</span><span style="color: #bbbbbb"> </span>(Job,
<span style="color: #bbbbbb">      </span>deptno)
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>JOB</th> <th>DEPTNO</th> <th>CNT</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>None</td> <td>10.0</td> <td>3</td> </tr> <tr> <th>1</th> <td>None</td> <td>20.0</td> <td>5</td> </tr> <tr> <th>2</th> <td>None</td> <td>30.0</td> <td>6</td> </tr> <tr> <th>3</th> <td>PRESIDENT</td> <td>NaN</td> <td>1</td> </tr> <tr> <th>4</th> <td>MANAGER</td> <td>NaN</td> <td>3</td> </tr> <tr> <th>5</th> <td>SALESMAN</td> <td>NaN</td> <td>4</td> </tr> <tr> <th>6</th> <td>ANALYST</td> <td>NaN</td> <td>2</td> </tr> <tr> <th>7</th> <td>CLERK</td> <td>NaN</td> <td>4</td> </tr> </tbody> </table> </div> <h2 id="85번">85번</h2> <ul> <li>RANK : 동순위 데이터 수에 따라 다음 순위 결정됨</li> <li>DENSE_RANK : 누적순위 - 동순위 다음 순위가 바로 이어짐</li> <li>ROW_NUMBER : 연속된 행번호 - 동순위 인정X, 나열 순서대로 순서 값 출력</li> </ul> <h2 id="90번">90번</h2> <h3 id="lag">LAG</h3> <ul> <li>바로 이전 행 결과 출력 <h3 id="lead">LEAD</h3> </li> <li>바로 다음 행 결과 출력</li> </ul> <h2 id="91번">91번</h2> <h3 id="권한-부여-옵션---중간관리자-권한">권한 부여 옵션 - 중간관리자 권한</h3> <ul> <li><strong>WITH GRANT OPTION</strong> : <u>오브젝트 권한을 다른 사용자에게 부여</u> -&gt; 이 사용자는 <code>중간관리자</code>가 됨 <ul> <li>중간관리자가 부여한 권한은 중간관리자만 회수 가능</li> <li>중간관리자에게 부여된 권한 회수 시 제 3 자에게 부여된 권한도 함께 회수됨</li> </ul> </li> <li><strong>WITH ADMIN OPTION</strong> : <u>시스템 권한/롤 권한을 다른 사용자에게 부여 가능</u> -&gt; 이 사용자는 <code>중간관리자</code>가 됨 <ul> <li>중간관리자를 거치지 않고 직접 회수 O</li> <li>중간관리자 권한 회수 : 제3자에게 부여된 권한 함께 회수 X(남아있음)</li> </ul> </li> </ul> <h2 id="96번">96번</h2> <ul> <li>INTERSECT : SQL 결과에 대한 교집합 출력 <ul> <li>중복된 행은 하나만 출력</li> </ul> </li> </ul> <h2 id="97번">97번</h2> <h3 id="lag-1">LAG</h3> <ul> <li><code>LAG (scalar_expression [, offset [, default ]]) OVER ( [ partition_by_clause ] order_by_clause)</code> <ul> <li>offset : The number of rows back from the current row from which to obtain a value. If not specified, the default is 1.</li> </ul> </li> <li>출처 : <a href="https://www.geeksforgeeks.org/sql-server-lag-function-overview/">Geeksforgeeks</a></li> </ul>]]></content><author><name></name></author><category term="study"/><category term="자격증"/><category term="sqld"/><category term="skill-stacking"/><summary type="html"><![CDATA[SQLD 5주차 공부 기록]]></summary></entry><entry><title type="html">SQLD 공부 실전문제 오답노트 - PART 2 - CH2. SQL 활용 - 1</title><link href="https://seulwithlove.github.io/blog/2024/get-sqld-exercise-2/" rel="alternate" type="text/html" title="SQLD 공부 실전문제 오답노트 - PART 2 - CH2. SQL 활용 - 1"/><published>2024-05-20T00:00:00+00:00</published><updated>2024-05-20T00:00:00+00:00</updated><id>https://seulwithlove.github.io/blog/2024/get-sqld-exercise-2</id><content type="html" xml:base="https://seulwithlove.github.io/blog/2024/get-sqld-exercise-2/"><![CDATA[<h1 id="sqld---week-5---실전문제-part2---2-sql-활용">SQLD - Week 5 - 실전문제 Part2 - 2. SQL 활용</h1> <ul> <li>&lt;<a href="https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=332583104">SQL 자격검정 실전문제</a>&gt; (일명 노랭이) 개정판 1회독 + 오답노트 <ul> <li>출제 비중이 높은 Part 2 부터 시작</li> </ul> </li> <li>오답노트하며 중요한 개념 정리</li> </ul> <h2 id="51번">51번</h2> <ul> <li>서브쿼리 종류</li> </ul> <h2 id="52번">52번</h2> <ul> <li>UNION ALL</li> <li>GROUPING SETS</li> <li>ROLLUP</li> <li>CUBE</li> </ul> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>ENAME,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">SUM</span>(SAL)
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>EMP
<span style="color: #008000; font-weight: bold">GROUP</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span>ENAME
<span style="color: #008000; font-weight: bold">UNION</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ALL</span>
<span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">NULL</span>,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">SUM</span>(SAL)
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>EMP
<span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #666666">1</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ASC</span>
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>ENAME</th> <th>SUM(SAL)</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>ADAMS</td> <td>1100</td> </tr> <tr> <th>1</th> <td>ALLEN</td> <td>1600</td> </tr> <tr> <th>2</th> <td>BLAKE</td> <td>2850</td> </tr> <tr> <th>3</th> <td>CLARK</td> <td>2450</td> </tr> <tr> <th>4</th> <td>FORD</td> <td>3000</td> </tr> <tr> <th>5</th> <td>JAMES</td> <td>950</td> </tr> <tr> <th>6</th> <td>JONES</td> <td>2975</td> </tr> <tr> <th>7</th> <td>KING</td> <td>5000</td> </tr> <tr> <th>8</th> <td>MARTIN</td> <td>1250</td> </tr> <tr> <th>9</th> <td>MILLER</td> <td>1300</td> </tr> <tr> <th>10</th> <td>SCOTT</td> <td>3000</td> </tr> <tr> <th>11</th> <td>SMITH</td> <td>800</td> </tr> <tr> <th>12</th> <td>TURNER</td> <td>1500</td> </tr> <tr> <th>13</th> <td>WARD</td> <td>1250</td> </tr> <tr> <th>14</th> <td>None</td> <td>29025</td> </tr> </tbody> </table> </div> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>ENAME,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">SUM</span>(SAL)
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>EMP
<span style="color: #008000; font-weight: bold">GROUP</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">GROUPING</span>
<span style="color: #008000; font-weight: bold">SETS</span><span style="color: #bbbbbb"> </span>(ENAME)
<span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #666666">1</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ASC</span>
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>ENAME</th> <th>SUM(SAL)</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>ADAMS</td> <td>1100</td> </tr> <tr> <th>1</th> <td>ALLEN</td> <td>1600</td> </tr> <tr> <th>2</th> <td>BLAKE</td> <td>2850</td> </tr> <tr> <th>3</th> <td>CLARK</td> <td>2450</td> </tr> <tr> <th>4</th> <td>FORD</td> <td>3000</td> </tr> <tr> <th>5</th> <td>JAMES</td> <td>950</td> </tr> <tr> <th>6</th> <td>JONES</td> <td>2975</td> </tr> <tr> <th>7</th> <td>KING</td> <td>5000</td> </tr> <tr> <th>8</th> <td>MARTIN</td> <td>1250</td> </tr> <tr> <th>9</th> <td>MILLER</td> <td>1300</td> </tr> <tr> <th>10</th> <td>SCOTT</td> <td>3000</td> </tr> <tr> <th>11</th> <td>SMITH</td> <td>800</td> </tr> <tr> <th>12</th> <td>TURNER</td> <td>1500</td> </tr> <tr> <th>13</th> <td>WARD</td> <td>1250</td> </tr> </tbody> </table> </div> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>ENAME,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">SUM</span>(SAL)
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>EMP
<span style="color: #008000; font-weight: bold">GROUP</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROLLUP</span><span style="color: #bbbbbb"> </span>(ENAME)
<span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #666666">1</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ASC</span>
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>ENAME</th> <th>SUM(SAL)</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>ADAMS</td> <td>1100</td> </tr> <tr> <th>1</th> <td>ALLEN</td> <td>1600</td> </tr> <tr> <th>2</th> <td>BLAKE</td> <td>2850</td> </tr> <tr> <th>3</th> <td>CLARK</td> <td>2450</td> </tr> <tr> <th>4</th> <td>FORD</td> <td>3000</td> </tr> <tr> <th>5</th> <td>JAMES</td> <td>950</td> </tr> <tr> <th>6</th> <td>JONES</td> <td>2975</td> </tr> <tr> <th>7</th> <td>KING</td> <td>5000</td> </tr> <tr> <th>8</th> <td>MARTIN</td> <td>1250</td> </tr> <tr> <th>9</th> <td>MILLER</td> <td>1300</td> </tr> <tr> <th>10</th> <td>SCOTT</td> <td>3000</td> </tr> <tr> <th>11</th> <td>SMITH</td> <td>800</td> </tr> <tr> <th>12</th> <td>TURNER</td> <td>1500</td> </tr> <tr> <th>13</th> <td>WARD</td> <td>1250</td> </tr> <tr> <th>14</th> <td>None</td> <td>29025</td> </tr> </tbody> </table> </div> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>ENAME,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">SUM</span>(SAL)
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>EMP
<span style="color: #008000; font-weight: bold">GROUP</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">CUBE</span><span style="color: #bbbbbb"> </span>(ENAME)
<span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #666666">1</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ASC</span>
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>ENAME</th> <th>SUM(SAL)</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>ADAMS</td> <td>1100</td> </tr> <tr> <th>1</th> <td>ALLEN</td> <td>1600</td> </tr> <tr> <th>2</th> <td>BLAKE</td> <td>2850</td> </tr> <tr> <th>3</th> <td>CLARK</td> <td>2450</td> </tr> <tr> <th>4</th> <td>FORD</td> <td>3000</td> </tr> <tr> <th>5</th> <td>JAMES</td> <td>950</td> </tr> <tr> <th>6</th> <td>JONES</td> <td>2975</td> </tr> <tr> <th>7</th> <td>KING</td> <td>5000</td> </tr> <tr> <th>8</th> <td>MARTIN</td> <td>1250</td> </tr> <tr> <th>9</th> <td>MILLER</td> <td>1300</td> </tr> <tr> <th>10</th> <td>SCOTT</td> <td>3000</td> </tr> <tr> <th>11</th> <td>SMITH</td> <td>800</td> </tr> <tr> <th>12</th> <td>TURNER</td> <td>1500</td> </tr> <tr> <th>13</th> <td>WARD</td> <td>1250</td> </tr> <tr> <th>14</th> <td>None</td> <td>29025</td> </tr> </tbody> </table> </div> <ul> <li>GROUPING SETS에서 전체 그룹 연산 결과 출력하려면 <code>()</code> 꼭 포함해야함</li> </ul> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>ENAME,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">SUM</span>(SAL)
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>EMP
<span style="color: #008000; font-weight: bold">GROUP</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">GROUPING</span>
<span style="color: #008000; font-weight: bold">SETS</span><span style="color: #bbbbbb"> </span>(ENAME,<span style="color: #bbbbbb"> </span>())
<span style="color: #008000; font-weight: bold">ORDER</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #666666">1</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ASC</span>
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>ENAME</th> <th>SUM(SAL)</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>ADAMS</td> <td>1100</td> </tr> <tr> <th>1</th> <td>ALLEN</td> <td>1600</td> </tr> <tr> <th>2</th> <td>BLAKE</td> <td>2850</td> </tr> <tr> <th>3</th> <td>CLARK</td> <td>2450</td> </tr> <tr> <th>4</th> <td>FORD</td> <td>3000</td> </tr> <tr> <th>5</th> <td>JAMES</td> <td>950</td> </tr> <tr> <th>6</th> <td>JONES</td> <td>2975</td> </tr> <tr> <th>7</th> <td>KING</td> <td>5000</td> </tr> <tr> <th>8</th> <td>MARTIN</td> <td>1250</td> </tr> <tr> <th>9</th> <td>MILLER</td> <td>1300</td> </tr> <tr> <th>10</th> <td>SCOTT</td> <td>3000</td> </tr> <tr> <th>11</th> <td>SMITH</td> <td>800</td> </tr> <tr> <th>12</th> <td>TURNER</td> <td>1500</td> </tr> <tr> <th>13</th> <td>WARD</td> <td>1250</td> </tr> <tr> <th>14</th> <td>None</td> <td>29025</td> </tr> </tbody> </table> </div> <ul> <li><code>GROUPING SETS</code>는 <strong>지정한 컬럼에 대한 그룹연산 결과만</strong> 출력</li> <li>반면, <code>ROLEUP</code>, <code>CUBE</code>는 <strong>전체 그룹 연산</strong>까지 출력함!</li> </ul> <h2 id="55번">55번</h2> <ul> <li>FK는 여러 개일수 있다는 점! <ul> <li>단순히 PK와 FK가 같은 데이터를 찾으면 FK가 여러개인 경우 해당 데이터들이 모두 출력됨</li> </ul> </li> <li><em>쿼리문 꼼꼼히 끝까지 해석하기!</em></li> </ul> <h2 id="56번">56번</h2> <ul> <li>UNION은 무조건 중복데이터는 1개만 두고 나머지 삭제함!</li> </ul> <h2 id="57번">57번</h2> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>b.grade,
<span style="color: #bbbbbb">       </span>a.job,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">sum</span>(a.sal)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>sum_sal,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">count</span>(<span style="color: #666666">*</span>)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>cnt
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>emp<span style="color: #bbbbbb"> </span>a,
<span style="color: #bbbbbb">     </span>salgrade<span style="color: #bbbbbb"> </span>b
<span style="color: #008000; font-weight: bold">WHERE</span><span style="color: #bbbbbb"> </span>a.sal<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BETWEEN</span><span style="color: #bbbbbb"> </span>b.losal<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AND</span><span style="color: #bbbbbb"> </span>b.hisal
<span style="color: #008000; font-weight: bold">GROUP</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">GROUPING</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">sets</span>(grade,<span style="color: #bbbbbb"> </span>(job,<span style="color: #bbbbbb"> </span>grade))
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>GRADE</th> <th>JOB</th> <th>SUM_SAL</th> <th>CNT</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>1</td> <td>CLERK</td> <td>2850</td> <td>3</td> </tr> <tr> <th>1</th> <td>2</td> <td>SALESMAN</td> <td>2500</td> <td>2</td> </tr> <tr> <th>2</th> <td>2</td> <td>CLERK</td> <td>1300</td> <td>1</td> </tr> <tr> <th>3</th> <td>3</td> <td>SALESMAN</td> <td>3100</td> <td>2</td> </tr> <tr> <th>4</th> <td>4</td> <td>MANAGER</td> <td>8275</td> <td>3</td> </tr> <tr> <th>5</th> <td>4</td> <td>ANALYST</td> <td>6000</td> <td>2</td> </tr> <tr> <th>6</th> <td>5</td> <td>PRESIDENT</td> <td>5000</td> <td>1</td> </tr> <tr> <th>7</th> <td>1</td> <td>None</td> <td>2850</td> <td>3</td> </tr> <tr> <th>8</th> <td>2</td> <td>None</td> <td>3800</td> <td>3</td> </tr> <tr> <th>9</th> <td>3</td> <td>None</td> <td>3100</td> <td>2</td> </tr> <tr> <th>10</th> <td>4</td> <td>None</td> <td>14275</td> <td>5</td> </tr> <tr> <th>11</th> <td>5</td> <td>None</td> <td>5000</td> <td>1</td> </tr> </tbody> </table> </div> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>b.grade,
<span style="color: #bbbbbb">       </span>a.job,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">sum</span>(a.sal)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>sum_sal,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">count</span>(<span style="color: #666666">*</span>)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>cnt
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>emp<span style="color: #bbbbbb"> </span>a,
<span style="color: #bbbbbb">     </span>salgrade<span style="color: #bbbbbb"> </span>b
<span style="color: #008000; font-weight: bold">WHERE</span><span style="color: #bbbbbb"> </span>a.sal<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BETWEEN</span><span style="color: #bbbbbb"> </span>b.losal<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AND</span><span style="color: #bbbbbb"> </span>b.hisal
<span style="color: #008000; font-weight: bold">GROUP</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">ROLLUP</span><span style="color: #bbbbbb"> </span>(grade,
<span style="color: #bbbbbb">                 </span>job)
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>GRADE</th> <th>JOB</th> <th>SUM_SAL</th> <th>CNT</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>1.0</td> <td>CLERK</td> <td>2850</td> <td>3</td> </tr> <tr> <th>1</th> <td>2.0</td> <td>SALESMAN</td> <td>2500</td> <td>2</td> </tr> <tr> <th>2</th> <td>2.0</td> <td>CLERK</td> <td>1300</td> <td>1</td> </tr> <tr> <th>3</th> <td>3.0</td> <td>SALESMAN</td> <td>3100</td> <td>2</td> </tr> <tr> <th>4</th> <td>4.0</td> <td>MANAGER</td> <td>8275</td> <td>3</td> </tr> <tr> <th>5</th> <td>4.0</td> <td>ANALYST</td> <td>6000</td> <td>2</td> </tr> <tr> <th>6</th> <td>5.0</td> <td>PRESIDENT</td> <td>5000</td> <td>1</td> </tr> <tr> <th>7</th> <td>1.0</td> <td>None</td> <td>2850</td> <td>3</td> </tr> <tr> <th>8</th> <td>2.0</td> <td>None</td> <td>3800</td> <td>3</td> </tr> <tr> <th>9</th> <td>3.0</td> <td>None</td> <td>3100</td> <td>2</td> </tr> <tr> <th>10</th> <td>4.0</td> <td>None</td> <td>14275</td> <td>5</td> </tr> <tr> <th>11</th> <td>5.0</td> <td>None</td> <td>5000</td> <td>1</td> </tr> <tr> <th>12</th> <td>NaN</td> <td>None</td> <td>29025</td> <td>14</td> </tr> </tbody> </table> </div> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>b.grade,
<span style="color: #bbbbbb">       </span>a.job,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">sum</span>(a.sal)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>sum_sal,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">count</span>(<span style="color: #666666">*</span>)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>cnt
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>emp<span style="color: #bbbbbb"> </span>a,
<span style="color: #bbbbbb">     </span>salgrade<span style="color: #bbbbbb"> </span>b
<span style="color: #008000; font-weight: bold">WHERE</span><span style="color: #bbbbbb"> </span>a.sal<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BETWEEN</span><span style="color: #bbbbbb"> </span>b.losal<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AND</span><span style="color: #bbbbbb"> </span>b.hisal
<span style="color: #008000; font-weight: bold">GROUP</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span>grade,
<span style="color: #bbbbbb">         </span><span style="color: #008000; font-weight: bold">ROLLUP</span><span style="color: #bbbbbb"> </span>(job)
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>GRADE</th> <th>JOB</th> <th>SUM_SAL</th> <th>CNT</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>1</td> <td>CLERK</td> <td>2850</td> <td>3</td> </tr> <tr> <th>1</th> <td>2</td> <td>SALESMAN</td> <td>2500</td> <td>2</td> </tr> <tr> <th>2</th> <td>2</td> <td>CLERK</td> <td>1300</td> <td>1</td> </tr> <tr> <th>3</th> <td>3</td> <td>SALESMAN</td> <td>3100</td> <td>2</td> </tr> <tr> <th>4</th> <td>4</td> <td>MANAGER</td> <td>8275</td> <td>3</td> </tr> <tr> <th>5</th> <td>4</td> <td>ANALYST</td> <td>6000</td> <td>2</td> </tr> <tr> <th>6</th> <td>5</td> <td>PRESIDENT</td> <td>5000</td> <td>1</td> </tr> <tr> <th>7</th> <td>1</td> <td>None</td> <td>2850</td> <td>3</td> </tr> <tr> <th>8</th> <td>2</td> <td>None</td> <td>3800</td> <td>3</td> </tr> <tr> <th>9</th> <td>3</td> <td>None</td> <td>3100</td> <td>2</td> </tr> <tr> <th>10</th> <td>4</td> <td>None</td> <td>14275</td> <td>5</td> </tr> <tr> <th>11</th> <td>5</td> <td>None</td> <td>5000</td> <td>1</td> </tr> </tbody> </table> </div> <div class="highlight" style="background: #f8f8f8"><pre style="line-height: 125%;"><span></span><span style="color: #008000; font-weight: bold">SELECT</span><span style="color: #bbbbbb"> </span>b.grade,
<span style="color: #bbbbbb">       </span>a.job,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">sum</span>(a.sal)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>sum_sal,
<span style="color: #bbbbbb">       </span><span style="color: #008000; font-weight: bold">count</span>(<span style="color: #666666">*</span>)<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AS</span><span style="color: #bbbbbb"> </span>cnt
<span style="color: #008000; font-weight: bold">FROM</span><span style="color: #bbbbbb"> </span>emp<span style="color: #bbbbbb"> </span>a,
<span style="color: #bbbbbb">     </span>salgrade<span style="color: #bbbbbb"> </span>b
<span style="color: #008000; font-weight: bold">WHERE</span><span style="color: #bbbbbb"> </span>a.sal<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BETWEEN</span><span style="color: #bbbbbb"> </span>b.losal<span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">AND</span><span style="color: #bbbbbb"> </span>b.hisal
<span style="color: #008000; font-weight: bold">GROUP</span><span style="color: #bbbbbb"> </span><span style="color: #008000; font-weight: bold">BY</span><span style="color: #bbbbbb"> </span>grade,
<span style="color: #bbbbbb">         </span><span style="color: #008000; font-weight: bold">CUBE</span><span style="color: #bbbbbb"> </span>(job)
</pre></div> <div> <style scoped="">.dataframe tbody tr th:only-of-type{vertical-align:middle}.dataframe tbody tr th{vertical-align:top}.dataframe thead th{text-align:right}</style> <table border="1" class="dataframe"> <thead> <tr style="text-align: right;"> <th></th> <th>GRADE</th> <th>JOB</th> <th>SUM_SAL</th> <th>CNT</th> </tr> </thead> <tbody> <tr> <th>0</th> <td>1</td> <td>None</td> <td>2850</td> <td>3</td> </tr> <tr> <th>1</th> <td>1</td> <td>CLERK</td> <td>2850</td> <td>3</td> </tr> <tr> <th>2</th> <td>2</td> <td>None</td> <td>3800</td> <td>3</td> </tr> <tr> <th>3</th> <td>2</td> <td>CLERK</td> <td>1300</td> <td>1</td> </tr> <tr> <th>4</th> <td>2</td> <td>SALESMAN</td> <td>2500</td> <td>2</td> </tr> <tr> <th>5</th> <td>3</td> <td>None</td> <td>3100</td> <td>2</td> </tr> <tr> <th>6</th> <td>3</td> <td>SALESMAN</td> <td>3100</td> <td>2</td> </tr> <tr> <th>7</th> <td>4</td> <td>None</td> <td>14275</td> <td>5</td> </tr> <tr> <th>8</th> <td>4</td> <td>ANALYST</td> <td>6000</td> <td>2</td> </tr> <tr> <th>9</th> <td>4</td> <td>MANAGER</td> <td>8275</td> <td>3</td> </tr> <tr> <th>10</th> <td>5</td> <td>None</td> <td>5000</td> <td>1</td> </tr> <tr> <th>11</th> <td>5</td> <td>PRESIDENT</td> <td>5000</td> <td>1</td> </tr> </tbody> </table> </div> <ul> <li>ROLLUP 에 전달한 컬럼이 2개면 해당 컬럼들의 총합이 출력됨</li> </ul> <h2 id="58번">58번</h2> <h3 id="window-function-윈도우함수">WINDOW FUNCTION 윈도우함수</h3> <pre><code class="language-sql">SELECT 윈도우함수(대상) OVER([PARTITION BY 컬럼]
[ORDER BY 컬럼 ASC|DESC]
[ROWS|RANGE BETWEEN A AND B]);
</code></pre> <ul> <li>OVER 절을 활용해서 그룹함수를 윈도우함수로 활용</li> <li>PARTITION BY : 연산결과만 출력하는 / 그룹연산 수행할 GROUP BY 컬럼</li> </ul> <h3 id="ratio_to_report">RATIO_TO_REPORT()</h3> <ul> <li>비율을 계산</li> </ul> <h2 id="60번">60번</h2> <h3 id="계층형-질의">계층형 질의</h3> <ul> <li>하나의 테이블 내 각 행끼리의 관계를 가질때, 연결고리로 행-행 사이의 계층을 표현</li> <li>PRIOR 위치에 따라 연결 데이터가 달라짐 <pre><code class="language-sql">  SELECT
  FROM 테이블 명
  START WITH 시작조건
  CONNECT BY PRIOR 연결조건;
</code></pre> </li> <li>START WITH : 데이터 출력할 시작 지정하는 조건 <ul> <li>해당 데이터가 있는 행이 LEVEL 1</li> </ul> </li> <li>CONNECT BY PRIOR : 시작점을 기준으로 하위 레벨을 찾아가는 조건 <ul> <li>행을 이어나갈 조건</li> </ul> </li> <li>ORDER SIBLINGS BY 컬럼 : 같은 LEVEL 일 경우 정렬 수행</li> </ul> <p><br/></p> <ul> <li>DESC : 내림차순 <ul> <li>큰 → 작은</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="study"/><category term="자격증"/><category term="sqld"/><category term="skill-stacking"/><summary type="html"><![CDATA[SQLD 5주차 공부 기록]]></summary></entry><entry><title type="html">SQLD 공부 실전문제 오답노트 - PART 2 - CH1. SQL 기본</title><link href="https://seulwithlove.github.io/blog/2024/get-sqld-exercise-1/" rel="alternate" type="text/html" title="SQLD 공부 실전문제 오답노트 - PART 2 - CH1. SQL 기본"/><published>2024-05-19T00:00:00+00:00</published><updated>2024-05-19T00:00:00+00:00</updated><id>https://seulwithlove.github.io/blog/2024/get-sqld-exercise-1</id><content type="html" xml:base="https://seulwithlove.github.io/blog/2024/get-sqld-exercise-1/"><![CDATA[<h1 id="sqld---week-4---실전문제-part2---1-sql-기본">SQLD - Week 4 - 실전문제 Part2 - 1. SQL 기본</h1> <ul> <li>&lt;<a href="https://www.aladin.co.kr/shop/wproduct.aspx?ItemId=332583104">SQL 자격검정 실전문제</a>&gt; (일명 노랭이) 개정판 1회독 + 오답노트 <ul> <li>출제 비중이 높은 Part 2 부터 시작</li> </ul> </li> <li>오답노트하며 중요한 개념 정리</li> </ul> <h2 id="11번">11번</h2> <ul> <li>SQL Server는 <code>''</code> 빈 문자열과 NULL을 구분함</li> <li>문자열은 <code>' '</code> 홑따옴표를 사용 <ul> <li><code>" "</code> 쌍따옴표는 식별자(테이블명, 컬럼명) 지정에서 사용 <ul> <li>쌍따옴표 내부에 있는 문자는 대소문자 구분</li> </ul> </li> </ul> </li> <li>숫자는 따옴표 없이 그냥 적음</li> </ul> <h2 id="13번">13번</h2> <ul> <li>TO_CHAR(SVC_END_DATE, ‘YYYYMM’) 과 TO_DATE(‘201501’, ‘YYYYMM’)은 다름!</li> </ul> <h2 id="15번">15번</h2> <ul> <li><code>LENGTH()</code> : 문자열의 개수를 숫자값으로 리턴</li> <li><code>CHR(ASCII번호)</code> : 아스키 코드 번호를 문자나 숫자로 바꿈 <ul> <li>줄바꿈은 길이 1 (LENGTH(CHR(10)) = 1)</li> </ul> </li> <li><code>REPLACE(문자열, 찾을문자열, 치환문자열)</code> : 치환문자열을 생략하거나 빈문자열 전달 -&gt; 찾을문자열 <strong>삭제</strong>!</li> </ul> <h2 id="16번">16번</h2> <ul> <li><code>+1/24/(60/10)</code> : 연산식!</li> <li>oracle에서 날짜나 시간에 숫자연산이 가능함 -&gt; 날짜 연산은 숫자 연산과 같음 <ul> <li>특정날짜 + 1 = “하루”를 더하는 의미 <blockquote> <ul> <li>1/24 : 하루를 24시간으로 나눈다 = 60분</li> <li>60/(60/10) : 60분을 6으로 나눈다 = 10분</li> </ul> </blockquote> </li> </ul> </li> </ul> <h2 id="24번">24번</h2> <ul> <li>oracle에서는 DATE_FORMAT 명령어 사용 안되는듯!</li> <li><strong>TO_CHAR</strong> / <strong>TO_DATE</strong> 활용</li> </ul> <h2 id="27번">27번</h2> <ul> <li>GROUP BY 컬럼을 중심으로 집계함수/ 그룹함수의 연산을 진행</li> </ul> <h2 id="29번">29번</h2> <ul> <li><code>ORDER BY COUNT(*) ASC</code> : 그룹핑된 행의 개수를 세서 그 수의 오름차순으로 정렬</li> <li>GROUP BY가 있는 경우 ORDER BY 에서도 그룹함수를 이용해야함</li> </ul> <h2 id="30번---오라클-시간계산">30번 - 오라클 시간계산</h2> <ul> <li><code>1/24</code> : 1시간 = 60분 (1일 / 24시간)</li> <li><code>1/24/60</code> : 1분 (1일 / 24시간 = 1시간 / 60 = 1분)</li> <li><code>1/24/6</code> : 10분</li> <li><code>1/24/60/6</code> : 10초</li> <li><code>1/12/(60/30)</code> : 1시간</li> <li><code>1.5/24</code> : 1시간 30분</li> <li><code>1.5/24/6</code> : 15분 <ul> <li>각 단위끼리 계산하기 어려우면 단위를 맞춰 변환후 계산 <ul> <li>e.g. 1일 / 24시간 = 24시간 / 24시간 = 1시간</li> <li>e.g. 1일 / 12시간 = 24시간 / 12시간 = 2시간</li> <li>e.g. 1일 / 24시간 / 6분 = 1시간 / 6분 = 60분 / 6분 = 10분</li> </ul> </li> </ul> </li> <li>참고: <a href="https://gent.tistory.com/244">블로그</a>, <a href="https://nocount.tistory.com/53">오류노트:티스토리</a></li> </ul> <h2 id="31번">31번</h2> <ul> <li><code>NULLIF(표현식1, 표현식2)</code> : 표현식1 = 표현식2 이면 NULL, 다르면 ‘1’ 리턴</li> </ul> <h2 id="38번">38번</h2> <ul> <li>JOIN</li> <li>Primary Key PK / Foreign Key FK : 일대다 관계</li> </ul> <h3 id="primary-keypk-기본키">PRIMARY KEY(PK) 기본키</h3> <ul> <li>유일한 식별자(각 행을 구별할수 있는 식별자 기능) <ul> <li><strong>UNIQUE + NOT NULL</strong></li> </ul> </li> <li>테이블 1개 - PK 1개 - 컬럼 여러개</li> </ul> <h3 id="foreign-key">FOREIGN KEY</h3> <ul> <li>자식테이블에 거는 장치</li> <li>부모 테이블을 참조하면서 관리</li> </ul> <h2 id="45번">45번</h2> <h3 id="union--union-all-구분">UNION / UNION ALL 구분</h3> <ul> <li>UNION : 중복된 데이터는 한 번만 출력 <ul> <li>중복된 데이터 제거, 자체 정렬</li> </ul> </li> <li>UNION ALL : 중복된 데이터 전체 출력</li> <li>JOIN 과의 차이점 <ul> <li>JOIN : 새로운 열로 결합(수평 결합)</li> <li>UNION : 새로운 행으로 결합(수직 결합)</li> <li>참고 : <a href="https://silverji.tistory.com/49">블로그</a></li> </ul> </li> </ul> <h3 id="full-outer-join">FULL OUTER JOIN</h3> <ul> <li>두 테이블 전체 기준으로 결과를 생성 → <strong>중복 데이터는 하나만 남기고 삭제</strong> 후 리턴</li> <li><code>'LEFT OUTER JOIN 결과' UNION 'RIGHT OUTER JOIN 결과'</code>와 동일 <ul> <li>ORACLE 표준에는 없음 <pre><code class="language-sql">SELECT column_name(s)
FROM table1
FULL OUTER JOIN table2
ON table1.column_name = table2.column_name
WHERE condition;
</code></pre> </li> </ul> </li> <li><em>Q:”그럼 FULL OUTER JOIN의 경우 ON 절의 조건은 상관없는건가..?”</em></li> </ul> <h2 id="49번">49번</h2> <h3 id="oracle-표준-outer-join">ORACLE 표준 ‘OUTER JOIN’</h3> <ul> <li>WHERE 절에서 기준이 되는 테이블 반대 테이블 조건 컬럼 뒤에 (+)를 붙임</li> <li>Inner 테이블 조건은 ON절에 포함시켜야 함</li> </ul> <h2 id="50번">50번</h2> <ul> <li>컬럼끼리 연산에서 NULL 있으면 NULL</li> <li>레코드끼리 연산에서 NULL 있으면 무시하고 연산 <ul> <li>e.g. SUM(COL1 + COL2) <ul> <li>각 컬럼의 행별 연산을 하고난 뒤에 각 행 연산결과를 모두 합함</li> <li>첫 행의 데이터가 ‘NULL + 10’ 이면 =&gt; NULL</li> <li>두번째 행의 데이터가 ‘10 + 20’ 이면 =&gt; 30</li> <li>SUM 연산하면 =&gt; 30</li> </ul> </li> </ul> </li> </ul> <h3 id="important">IMPORTANT!</h3> <ul> <li>문제를 읽고 작업내용 정리 <ul> <li>문제가 줄글로 되어있는 경우 어떤 작업을 해야하는지 빨리 찾아내는게 중요</li> <li>SELECT절에 사용할 내용, FROM절, .. 각 절에서 필요한 정보를 구분해서 표시하자!</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="study"/><category term="자격증"/><category term="sqld"/><category term="skill-stacking"/><summary type="html"><![CDATA[SQLD 4주차 공부 기록]]></summary></entry><entry><title type="html">SQLD 공부 PART 2 - CH3. 관리구문</title><link href="https://seulwithlove.github.io/blog/2024/get-sqld-part2-3/" rel="alternate" type="text/html" title="SQLD 공부 PART 2 - CH3. 관리구문"/><published>2024-05-17T00:00:00+00:00</published><updated>2024-05-17T00:00:00+00:00</updated><id>https://seulwithlove.github.io/blog/2024/get-sqld-part2-3</id><content type="html" xml:base="https://seulwithlove.github.io/blog/2024/get-sqld-part2-3/"><![CDATA[<h1 id="sqld---week-4---part2---ch3-관리구문">SQLD - Week 4 - Part2 - CH3. 관리구문</h1> <ul> <li>유튜브 &lt;<a href="https://www.youtube.com/@hdatalab">홍쌤의 데이터랩</a>&gt;, 강의자료 단권화</li> <li>책 &lt;2023 유선배 SQL개발자(SQLD) 과외노트&gt; 참고</li> <li>참고 : <a href="https://seung-story.tistory.com/140">블로그 Seung_story</a></li> </ul> <h2 id="1-dml-data-manipulation-language">1. DML (Data Manipulation Language)</h2> <ul> <li>데이터 수정어</li> <li>반드시 commit(저장), rollback(취소)으로 transaction 제어해야함!! <br/></li> </ul> <h3 id="insert">INSERT</h3> <ul> <li>한 번에 한 행만 입력 <ul> <li>여러 행 한꺼번에 입력하려면 서브쿼리 활용</li> <li>e.g. <code>INSERT INTO EMP3(EMPNO, ENAME, DEPTNO)</code></li> </ul> </li> <li><strong>컬럼별 데이터타입, 사이즈</strong> 맞게 삽입!!</li> </ul> <pre><code class="language-sql">INSERT INTO 테이블 VALUES(value1, value2, ...);
INSERT INTO 테이블(컬럼1, 컬럼2, ...) VALUES(value1, value2, ...);
</code></pre> <ul> <li>INTO 절의 테이블에 컬럼명 명시안하면 전체 컬럼에 데이터 입력하겠다는 의미 <ul> <li>컬럼수에 맞는 value값 전달!</li> </ul> </li> <li>INTO 절에 컬럼명 명시해서 일부 컬럼만 입력 가능 <ul> <li>작성하지 않은 컬럼은 NULL 입력됨 <ul> <li>해당 컬럼이 NOT NULL 속성인 경우 에러발생! 유의!</li> </ul> </li> </ul> </li> <li>문자 컬럼에 숫자값 입력 가능(권장X)</li> <li>숫자 컬럼에 문자값 입력 가능(권장X)</li> </ul> <h3 id="update">UPDATE</h3> <ul> <li>단일 컬럼 수정 <pre><code class="language-sql">UPDATE 테이블명
SET 수정할컬럼명 = 수정값
WHERE 조건;
</code></pre> </li> <li>다중 컬럼 수정 (서브쿼리 사용) <pre><code class="language-sql">UPDATE 테이블명
SET (수정할컬럼명1, 수정할컬럼명2, ...) = (SELECT 수정값1, 수정값2, ...)
WHERE 조건;
</code></pre> </li> </ul> <h3 id="delete">DELETE</h3> <pre><code class="language-sql">DELETE [FROM] 테이블명
[WHERE 조건];
</code></pre> <ul> <li>FROM 생략 가능</li> <li>WHERE 조건 전달안할경우 모든 행 삭제 됨</li> </ul> <h3 id="merge">MERGE</h3> <ul> <li>병합 : 참조 테이블 필수 <pre><code class="language-sql">MERGE INTO 테이블명
USING 참조테이블
ON (연결조건)
WHEN MATCHED THEN
   UPDATE
      SET 수정할내용
WHEN NOT MATCHED THEN
   INSERT VALUES(삽입할내용)
</code></pre> </li> </ul> <h2 id="2-tcl-transaction-control-language">2. TCL (Transaction Control Language)</h2> <ul> <li>트랜잭션 제어어</li> <li>DML(UPDATE, INSERT, DELETE)에서 많이 사용 <ul> <li>DDL은 AUTO COMMIT</li> </ul> </li> <li>특성 <ul> <li>원자성(atomicity) : 트랜잭션 정의된 연산들 모두 성공적으로 실행되던지 아니면 전혀 실행되지 않은 상태로 남아 있어야 함</li> <li>일관성(consistency) : 트랜잭션 실행 전 데이터베이스 내용이 잘못되어 있지 않다면 트랜잭션 실행 이후에도 데이터베이스 내용의 잘못이 있으면 안됨</li> <li>고립성(isolation) : 트랜잭션 실행도중 다른 트랜잭션의 영향을 받아 잘못된 결과를 만들어서는 안됨 <ul> <li>LOCKING 으로 고립성 보장 <ul> <li>트랜잭션이 수행하는 동안 특정 데이터에 대해 다른 트랜잭션이 동시에 접근하지 못하게 제한</li> </ul> </li> </ul> </li> <li>지속성(durability) : 트랜잭션이 성공적으로 수행되면 갱신한 데이터베이스 내용이 영구적으로 저장</li> </ul> </li> </ul> <h3 id="commit">COMMIT</h3> <ul> <li>데이터 저장 : 데이터베이스 변경시 올바르게 반영된 데이터를 데이터베이스에 반영</li> <li>COMMIT 하고 나면 되돌릴수 없음</li> <li>DDL하면 AUTO COMMIT : 되돌릴수 없음(23c 버전부터 비활성화 가능)</li> </ul> <h3 id="rollback">ROLLBACK</h3> <ul> <li>데이터 원복 : 트랜잭션 시작 이전 상태로 돌림</li> <li>시점이 매우 중요! : 최종 COMMIT 시점/변경 전/특정 SAVEPOINT 시점</li> </ul> <h3 id="savepoint">SAVEPOINT</h3> <ul> <li>트랜잭션 시점</li> <li>책갈피처럼 끼워두는 곳(COMMIT전) <ul> <li>원하는 이름으로 설정 가능</li> </ul> </li> </ul> <h2 id="3-ddl-data-definition-language">3. DDL (Data Definition Language)</h2> <ul> <li>데이터 구조 정의어(객체 생성, 삭제, 변경)</li> <li>AUTO COMMIT 특성 : 명령어 수행하면 즉시 저장/원복 불가</li> </ul> <h3 id="create">CREATE</h3> <ul> <li>객체 생성(테이블/인덱스)</li> <li>명령어 전달 순서대로 생성</li> <li>테이블 생성시 소유자 명시 가능</li> </ul> <h4 id="데이터-타입">데이터 타입</h4> <ul> <li>CHAR(n) : 고정형 문자 <ul> <li>사이즈</li> </ul> </li> <li>VARCHAR2(n)</li> <li>NUMBER(p,s)</li> <li>DATE</li> <li>참고 : 묵시적 형변환을 하기도 함(데이터 타입을 자동으로 변환) <ul> <li>VARCHAR2 → NUMBER</li> <li>VARCHAR2 → DATE</li> <li>NUMBER → VARCHAR2</li> <li>DATE → VARCHAR2</li> </ul> </li> </ul> <h3 id="alter">ALTER</h3> <ul> <li>테이블 구조 변경</li> </ul> <h4 id="1-add-컬럼추가">1. ADD 컬럼추가</h4> <pre><code class="language-sql">ALTER TABLE 테이블명 ADD 컬럼명 데이터타입 [DEFAULT] [제약조건];
</code></pre> <ul> <li>기존에 데이터가 있는 테이블에 컬럼 추가시 NOT NULL 속성 전달 불가! <ul> <li>컬럼 추가하면 자동으로 NULL로 채워짐</li> <li>데이터 없는 테이블에는 NOT NULL 속성 컬럼 추가 O</li> <li>데이터 전달하면 가능 <code>... DEFAULT value NOT NULL;</code></li> </ul> </li> <li>여러 컬럼 동시 추가 가능 : 반드시 괄호 사용 <ul> <li>SQL Server는 여러 컬럼 동시 수정X (괄호 사용X)</li> </ul> </li> </ul> <h4 id="2-modify-변경">2. MODIFY 변경</h4> <ul> <li>여러 컬럼 동시 변경 가능 <br/></li> <li>컬럼 사이즈</li> <li>데이터타입 <ul> <li>빈 컬럼인 경우 데이터 타입 변경 가능</li> </ul> </li> <li>DEFAULT 값 변경 <ul> <li>DEFAULT 값은 특정 컬럼에 값이 생략될 경우 자동으로 부여되는 값</li> <li>NULL로 채우고 싶은 경우 DEFAULT 대신 NULL 입력</li> <li>기존에 있는 데이터에는 영향X -&gt; 새로 입력되는 데이터부터 영향</li> </ul> </li> </ul> <h4 id="3-rename--컬럼명-변경">3. RENAME : 컬럼명 변경</h4> <h4 id="4-drop-column--컬럼-삭제">4. DROP COLUMN : 컬럼 삭제</h4> <ul> <li><code>ALTER TABLE table_name DROP COLUMN column_name;</code></li> </ul> <p><strong>[DELETE - DROP - TRUNCATE]</strong></p> <ul> <li>DELETE : 데이터 일부 / 전체 삭제 - 롤백 가능</li> <li>DROP : 객체(테이블, 인덱스) 즉시 삭제 - 롤백 불가(AUTO COMMIT) <ul> <li>실행 이후 조회 불가</li> <li>해당 스키마 뿐 아니라 연관 객체도 모두 삭제하려면 ‘CASCADE’ - e.g. <code>DROP SCHEMA EMPLOYEE CASCADE;</code></li> </ul> </li> <li>TRUNCATE : 구조 남기고 데이터만 즉시 삭제 - 롤백 불가(AUTO COMMIT)</li> </ul> <h3 id="제약조건">제약조건</h3> <ul> <li>데이터 무결성을 위해 각 컬럼에 생성하는 데이터 제약 장치</li> <li>UNIQUE : 중복 허용X</li> <li>NULL</li> <li>NOT NULL</li> </ul> <h4 id="primary-keypk-기본키">PRIMARY KEY(PK) 기본키</h4> <ul> <li>유일한 식별자(각 행을 구별할수 있는 식별자 기능)</li> <li><strong>UNIQUE + NOT NULL</strong> <ul> <li>PRIMARY KEY 생성하면 NOT NULL 속성 자동 부여</li> </ul> </li> <li>테이블 1개 - PK 1개 - 컬럼 여러개</li> <li>CREATE TABLE 때 생성 <pre><code class="language-sql">// 방법 1
  CREATE TABLE table_name  
  (  
  column_name1 datatype (size) PRIMARY KEY,  
  column_name2 datatype (size),  
  .  
  .  
  column_nameN datatype(size)  
  );

// 방법 2 - 제약조건 이름 사용
  CREATE TABLE table_name  
  (  
  column_name1 datatype (size),  
  column_name2 datatype (size),  
  .  
  .  
  column_nameN datatype(size),
  CONSTRAINT constraint_name PRIMARY KEY (column_name)  
  );
</code></pre> </li> <li>ALTER TABLE 때 생성 <pre><code class="language-sql">// 방법 1 - 컬럼명 사용
ALTER TABLE table_name
ADD PRIMARY KEY (column_name);

// 방법 2 - 제약조건 이름 사용
ALTER TABLE table_name
ADD CONSTRAINT constraint_name PRIMARY KEY (column_name);
</code></pre> </li> </ul> <h4 id="foreign-key">FOREIGN KEY</h4> <ul> <li>자식테이블에 거는 장치</li> <li>부모 테이블을 참조하면서 관리</li> <li>CREATE TABLE 때 생성 <pre><code class="language-sql">CREATE TABLE 자식테이블명(
  컬럼1 데이터타입 [DEFAULT value] FOREIGN KEY REFERENCES 부모테이블(PK명),
  ...
);
</code></pre> <ul> <li>컬럼1 : 여기에 FOREIGN KEY 거는것!</li> <li><strong>참조키</strong> : 사전에 <strong>PK / UNIQUE KEY</strong> 로 지정되어야함!</li> </ul> </li> <li>ALTER TABLE 때 생성 <pre><code class="language-sql">// 방법 1 - 컬럼명 사용
ALTER TABLE 테이블명
ADD FOREIGN KEY (컬럼명) REFERENCES 부모테이블(PK명);

// 방법 2 - 제약조건 이름 사용
ALTER TABLE 테이블명
ADD CONSTRAINT 제약조건이름 
FOREIGN KEY (컬럼명) REFERENCES 부모테이블(PK명);
</code></pre> </li> <li><strong>자식테이블</strong> : <strong>INSERT, UPDATE 제약</strong> 생김</li> <li><strong>부모테이블</strong> : <strong>UPDATE, DELETE</strong> 제약 생김</li> </ul> <p><strong>[FOREIGN KEY Constraints]</strong></p> <ul> <li><strong>ON DELETE 옵션</strong> <ul> <li>ON DELETE CASCADE : 부모 데이터 삭제 → 자식 데이터 함께 삭제 <ul> <li>테이블 자체가 삭제됨</li> </ul> </li> <li>ON DELETE SET NULL : 부모 데이터 삭제 → 자식 데이터 참조값 NULL로 수정</li> <li>ON DELETE SET DEFAULT : 부모 데이터 삭제 → 자식 데이터 DEFAULT 값으로 설정</li> <li>ON DELETE RESTRICT : 자식 테이블에 PK값이 없는 경우만 부모 데이터 삭제 허용</li> <li>ON NO ACTION : 참조무결성을 위반하는 삭제/수정 액션을 취하지 않음</li> </ul> </li> <li><strong>ON UPDATE / INSERT 옵션</strong> <ul> <li>AUTOMATIC</li> <li>SET NULL</li> <li>SET DEFAULT</li> <li>DEPENDENT</li> <li>NO ACTION <ul> <li>위 옵션은 <SQL 자격검정="" 실전문제=""> 2023년 개정판 문제 해설에 있는 내용</SQL></li> <li>구글링했을때 insert의 옵션 정보는 거의 나오지 않음</li> <li><a href="https://dev.mysql.com/doc/refman/8.0/en/create-table-foreign-keys.html">mysql</a>에서만 아래의 정보를 제공하고 있음</li> <li>어떤게 맞는 내용인지 확인하지 못함 ```sql [CONSTRAINT [symbol]] FOREIGN KEY [index_name] (col_name, …) REFERENCES tbl_name (col_name,…) [ON DELETE reference_option] [ON UPDATE reference_option]</li> </ul> <p>reference_option: RESTRICT | CASCADE | SET NULL | NO ACTION | SET DEFAULT ```</p> </li> </ul> </li> </ul> <h3 id="기타-오브젝트--view-뷰">기타 오브젝트 : View 뷰</h3> <pre><code class="language-sql">CREATE [OR REPLACE] VIEW 뷰이름
AS
조회쿼리;
</code></pre> <ul> <li>‘query alias’ 라고도 함</li> <li>뷰를 만들고 select문과 연동시켜두면 뷰로 해당 select문 조회가능</li> <li>특징 <ul> <li>가상의 테이블 : 저장공간을 차지X</li> <li>기본 테이블 삭제 → 해당 테이블 참조해서 만든 뷰도 삭제됨</li> </ul> </li> <li>장점 <ul> <li>독립성 : 테이블 구조가 바뀌어도 뷰 사용하는 응용프로그램은 변경 필요 X</li> <li>편리성 : 복잡한 쿼리를 뷰로 생성 관련 쿼리를 단순하게 작성가능 <ul> <li>데이터 관리 단순화</li> </ul> </li> <li>보안성 : 숨기고 싶은 데이터는 제외하고 뷰를 생성 → 데이터 접근 제어 가능</li> </ul> </li> <li>단점 <ul> <li>수정 불가</li> <li>인덱스 구성 불가</li> </ul> </li> </ul> <h2 id="4-dcl-data-control-language">4. DCL (Data Control Language)</h2> <ul> <li>데이터 제어어 : “권한”으로 통제! <h3 id="권한-종류">권한 종류</h3> </li> <li>오브젝트 권한 : 테이블에 대한 권한(SELECT, INSERT, UPDATE, DELETE, MERGE) <ul> <li>테이블 소유자는 소유 테이블 조회/수정 권한 부여/회수 가능</li> </ul> </li> <li>시스템 권한 : 시스템 작업(테이블 생성, 인덱스 삭제) <ul> <li>관리자 권한만 부여/회수 가능</li> </ul> </li> <li><strong>ROLE</strong> : 권한 묶음 <ul> <li>공통된 속성을 지닌 권한을 묶는 역할</li> <li>권한 관리를 편하게 하기 위해</li> <li>부여후 재접속해야 반영됨(원래 권한은 부여후 바로 실행됨)</li> <li><u>ROLE을 통해 부여한 권한은 직접 회수 X</u> <ul> <li>ROLE을 통한 회수만 가능</li> </ul> </li> </ul> </li> </ul> <h3 id="grant--권한-부여">GRANT : 권한 부여</h3> <p><code>GRANT 권한 ON 테이블명 TO 유저;</code></p> <ul> <li>동시에 여러 권한 부여 가능</li> <li>동시에 여러 유저에게 권한 부여 가능</li> <li>동시에 여러 객체(테이블)에 대한 권한 부여 X <ul> <li>옵션 설정 안하면 기본값은 : <code>WITH GRANT OPTION</code></li> </ul> </li> </ul> <h3 id="revoke--권한-회수">REVOKE : 권한 회수</h3> <p><code>REVOKE 권한 ON 테이블명 FROM 유저;</code></p> <ul> <li>동시에 여러 권한 회수 가능</li> <li>동시에 여러 유저로부터 권한 회수 가능</li> </ul> <p><strong>[권한 부여 옵션 - 중간관리자 권한]</strong></p> <ul> <li><strong>WITH GRANT OPTION</strong> : <u>오브젝트 권한을 다른 사용자에게 부여</u> -&gt; 이 사용자는 <code>중간관리자</code>가 됨 <ul> <li>중간관리자가 부여한 권한은 중간관리자만 회수 가능</li> <li>중간관리자에게 부여된 권한 회수 시 제 3 자에게 부여된 권한도 함께 회수됨</li> </ul> </li> <li><strong>WITH ADMIN OPTION</strong> : <u>시스템 권한/롤 권한을 다른 사용자에게 부여 가능</u> -&gt; 이 사용자는 <code>중간관리자</code>가 됨 <ul> <li>중간관리자를 거치지 않고 직접 회수 O</li> <li>중간관리자 권한 회수 : 제3자에게 부여된 권한 함께 회수 X(남아있음)</li> </ul> </li> </ul> <h2 id="종합">종합</h2> <table> <thead> <tr> <th>명령어 종류</th> <th>명령어</th> <th>설명</th> </tr> </thead> <tbody> <tr> <td>DML<br/>데이터조작어</td> <td>SELECT</td> <td> </td> </tr> <tr> <td>DML<br/>데이터조작어</td> <td>INSERT<br/>UPDATE<br/>DELETE</td> <td>데이터에 변형을 가하는 것</td> </tr> <tr> <td>DDL<br/>데이터정의어</td> <td>CREATE<br/>ALTER<br/>DROP<br/>RENAME</td> <td>데이터 구조를 정의</td> </tr> <tr> <td>DCL<br/>데이터제어어</td> <td>GRANT<br/>REVOKE</td> <td>권한으로 데이터 제어</td> </tr> <tr> <td>TCL<br/>트랜잭션제어어</td> <td>COMMIT<br/>ROLLBACK</td> <td>트랜잭션별로 관리</td> </tr> </tbody> </table>]]></content><author><name></name></author><category term="study"/><category term="자격증"/><category term="sqld"/><category term="skill-stacking"/><summary type="html"><![CDATA[SQLD 4주차 공부 기록]]></summary></entry></feed>